// Copyright (c) 2001-2009 Objective Systems, Inc. (http://www.obj-sys.com) 
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available 
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//

/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).
 */
#ifndef SUPL_AUTH_RESP_H
#define SUPL_AUTH_RESP_H

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "rtpersrc/asn1PerCppTypes.h"
#include "ASN1CBitStr.h"
#include "ULP-Components.h"

/**
 * Header file for ASN.1 module SUPL-AUTH-RESP
 */
/**************************************************************/
/*                                                            */
/*  SPCAuthKey_shortKey                                       */
/*                                                            */
/**************************************************************/

#define TV_SPCAuthKey_shortKey	(TM_UNIV|TM_PRIM|3)

struct ASN1T_SPCAuthKey_shortKey {
   OSUINT32  numbits;
   OSOCTET data[16];
   // ctors
   ASN1T_SPCAuthKey_shortKey () : numbits(0) {}
   ASN1T_SPCAuthKey_shortKey (OSUINT32 _numbits, const OSOCTET* _data) :
      numbits(_numbits) {
      OSCRTLMEMCPY (data, _data, sizeof(data));
   }
} ;

IMPORT_C int asn1PE_SPCAuthKey_shortKey (OSCTXT* pctxt, ASN1T_SPCAuthKey_shortKey* pvalue);

IMPORT_C int asn1PD_SPCAuthKey_shortKey (OSCTXT* pctxt, ASN1T_SPCAuthKey_shortKey* pvalue);

IMPORT_C void asn1Print_SPCAuthKey_shortKey
   (const char* name, ASN1T_SPCAuthKey_shortKey* pvalue);

/**************************************************************/
/*                                                            */
/*  SPCAuthKey_longKey                                        */
/*                                                            */
/**************************************************************/

#define TV_SPCAuthKey_longKey	(TM_UNIV|TM_PRIM|3)

struct ASN1T_SPCAuthKey_longKey {
   OSUINT32  numbits;
   OSOCTET data[32];
   // ctors
   ASN1T_SPCAuthKey_longKey () : numbits(0) {}
   ASN1T_SPCAuthKey_longKey (OSUINT32 _numbits, const OSOCTET* _data) :
      numbits(_numbits) {
      OSCRTLMEMCPY (data, _data, sizeof(data));
   }
} ;

IMPORT_C int asn1PE_SPCAuthKey_longKey (OSCTXT* pctxt, ASN1T_SPCAuthKey_longKey* pvalue);

IMPORT_C int asn1PD_SPCAuthKey_longKey (OSCTXT* pctxt, ASN1T_SPCAuthKey_longKey* pvalue);

IMPORT_C void asn1Print_SPCAuthKey_longKey
   (const char* name, ASN1T_SPCAuthKey_longKey* pvalue);

/**************************************************************/
/*                                                            */
/*  SPCAuthKey                                                */
/*                                                            */
/**************************************************************/

/* Choice tag constants */

#define T_SPCAuthKey_shortKey           1
#define T_SPCAuthKey_longKey            2
#define T_SPCAuthKey_extElem1           3

struct ASN1T_SPCAuthKey {
   int t;
   union {
      /* t = 1 */
      ASN1T_SPCAuthKey_shortKey *shortKey;
      /* t = 2 */
      ASN1T_SPCAuthKey_longKey *longKey;
      /* t = 3 */
   } u;
} ;

IMPORT_C int asn1PE_SPCAuthKey (OSCTXT* pctxt, ASN1T_SPCAuthKey* pvalue);

IMPORT_C int asn1PD_SPCAuthKey (OSCTXT* pctxt, ASN1T_SPCAuthKey* pvalue);

IMPORT_C void asn1Print_SPCAuthKey
   (const char* name, ASN1T_SPCAuthKey* pvalue);

IMPORT_C void asn1Free_SPCAuthKey (OSCTXT *pctxt, ASN1T_SPCAuthKey* pvalue);

/**************************************************************/
/*                                                            */
/*  KeyIdentity3                                              */
/*                                                            */
/**************************************************************/

#define TV_KeyIdentity3	(TM_UNIV|TM_PRIM|3)

struct ASN1T_KeyIdentity3 {
   OSUINT32  numbits;
   OSOCTET data[16];
   // ctors
   ASN1T_KeyIdentity3 () : numbits(0) {}
   ASN1T_KeyIdentity3 (OSUINT32 _numbits, const OSOCTET* _data) :
      numbits(_numbits) {
      OSCRTLMEMCPY (data, _data, sizeof(data));
   }
} ;

IMPORT_C int asn1PE_KeyIdentity3 (OSCTXT* pctxt, ASN1T_KeyIdentity3* pvalue);

IMPORT_C int asn1PD_KeyIdentity3 (OSCTXT* pctxt, ASN1T_KeyIdentity3* pvalue);

IMPORT_C void asn1Print_KeyIdentity3
   (const char* name, ASN1T_KeyIdentity3* pvalue);

/**************************************************************/
/*                                                            */
/*  SUPLAUTHRESP                                              */
/*                                                            */
/**************************************************************/

#define TV_SUPLAUTHRESP	(TM_UNIV|TM_CONS|16)

struct ASN1T_SUPLAUTHRESP {
   struct {
      unsigned sPCAuthKeyPresent : 1;
      unsigned keyIdentity3Present : 1;
      unsigned statusCodePresent : 1;
   } m;
   ASN1T_SPCAuthKey sPCAuthKey;
   ASN1T_KeyIdentity3 keyIdentity3;
   ASN1T_StatusCode statusCode;
   IMPORT_C ASN1T_SUPLAUTHRESP ();
} ;

IMPORT_C int asn1PE_SUPLAUTHRESP (OSCTXT* pctxt, ASN1T_SUPLAUTHRESP* pvalue);

IMPORT_C int asn1PD_SUPLAUTHRESP (OSCTXT* pctxt, ASN1T_SUPLAUTHRESP* pvalue);

IMPORT_C void asn1Print_SUPLAUTHRESP
   (const char* name, ASN1T_SUPLAUTHRESP* pvalue);

IMPORT_C void asn1Free_SUPLAUTHRESP (OSCTXT *pctxt, ASN1T_SUPLAUTHRESP* pvalue);

#endif

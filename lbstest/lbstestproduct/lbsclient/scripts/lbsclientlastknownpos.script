// Copyright (c) 2006-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

// Delete old log file
RUN_UTILS DeleteFile c:\private\101f401d\Logdbu.dat

LOAD_SUITE LbsClientTestServer -SharedData

PRINT Run LbsClientTestServer
PRINT

//Before we start LBS, select the test A-GPS integration module and network reg status txt file to use.
PREFIX RUN_UTILS
	MkDir c:\private\10282253\
	MkDir c:\private\10282253\lbs\
	MkDir c:\private\10282253\lbs\locmods\
	CopyFile c:\testdata\configs\xtestmodule.ini c:\private\10282253\lbs\locmods\agpsintegmodule.ini
    CopyFile c:\testdata\configs\lbstestconfig.txt c:\config.txt
 	DeleteFile c:\private\10202be9\1028224b.cre
  	DeleteFile c:\private\10202be9\persists\1028224b.cre
 	DeleteFile c:\private\10282253\lbs\lbsprofile.ini
REMOVE_PREFIX

RUN_TEST_STEP 010 LbsClientTestServer LbsStep_ResetDefaultAdmin
RUN_TEST_STEP 030 LbsClientTestServer LbsStep_StartLbs
RUN_TEST_STEP 020 LbsClientTestServer LbsStep_SetAutonomousMode


START_TESTCASE LBS-Client-LastKnownPos-0001

//!@SYMTestCaseID			LBS-Client-LastKnownPos-0001
//!@SYMTestCaseDesc			Get Last Known Position when it is in cache
//!
//!@SYMTestActions			1. Request a location update (passing in a TPositionInfo) and
//!						wait for it to complete. Read the timestamp on this location.
//!					2. Request last known Location (should now be in cache).
//!					3. Wait for location request to complete.
//!					4. Verify the return status of the request is KErrNone.
//!					5. Verify that position data is received and that it contains
//!						a timestamp that matches the one from the last request. 
//!					6. Use GetPosition() to get the lat/long/altitude and verify that
//!						they are within the appropriate range.
//!					7. Verify that the location request has been logged.
//!
//!@SYMTestExpectedResults	Location Information is received and is correct. Log contains summary info.
//!
//!@SYMPREQ					PREQ786
//!@SYMREQ 					REQ786.08
//!@SYMREQ 					REQ786.19
//!@SYMPREQ					PREQ89
//!@SYMREQ 					REQ 89.03
//!@SYMREQ 					REQ 89.07
//!@SYMREQ 					REQ 89.09
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Implemented

RUN_TEST_STEP 010 LbsClientTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsClientTestServer LbsStep_SetUpPsy c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos

RUN_TEST_STEP 010 LbsClientTestServer LbsStep_ClearLog
RUN_TEST_STEP 020 LbsClientTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0001
RUN_TEST_STEP 120 LbsClientTestServer LbsClientStep_LastKnownPos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0001
RUN_TEST_STEP 010 LbsClientTestServer LbsStep_VerifyPosInfos

END_TESTCASE LBS-Client-LastKnownPos-0001


// This test is no longer required as this behaviour is tested by lbsclientportedsuite.script
//START_TESTCASE LBS-Client-LastKnownPos-0002

//!@SYMTestCaseID			LBS-Client-LastKnownPos-0002
//!@SYMTestCaseDesc			Get Last Known Position when it is NOT in cache
//!
//!@SYMTestActions			
//!					1.Immediately after boot up (ie before any locations have been requested):
//!					2.Request Last Known Location.
//!					3.Verify that request status received is KErrUnknown (no cached position info)
//!
//!@SYMTestExpectedResults	Request fails with KErrUnknown
//!
//!@SYMPREQ					PREQ786
//!@SYMREQ 					REQ786.08
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			2
//!@SYMTestStatus			Implemented

// RUN_TEST_STEP 010 LbsClientTestServer LbsStep_InstallScheduler
//RUN_TEST_STEP 020 LbsClientTestServer LbsStep_SetUpPsy c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos

//RUN_TEST_STEP 300 LbsClientTestServer LbsClientStep_LastKnownPos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0002

//END_TESTCASE LBS-Client-LastKnownPos-0002


START_TESTCASE LBS-Client-LastKnownPos-0003

//!@SYMTestCaseID			LBS-Client-LastKnownPos-0003
//!@SYMTestCaseDesc			Request Last Known Position with unsupported aPosInfo type passed in.
//!
//!@SYMTestActions			1.Open a sub-session with the network module (specify moduleid)
//!					2.Request Last Known Location, passing in unsupported aPosInfo (TPositionSatelliteInfo, say)
//!					4.Verify that request status received is KErrArgument
//!
//!@SYMTestExpectedResults	Request fails with KErrArgument
//!
//!@SYMPREQ					PREQ786
//!@SYMREQ 					REQ786.08
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			3
//!@SYMTestStatus			Implemented

RUN_TEST_STEP 010 LbsClientTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsClientTestServer LbsStep_SetUpPsy c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPosNetwork

RUN_TEST_STEP 020 LbsClientTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0004
RUN_TEST_STEP 120 LbsClientTestServer LbsClientStep_LastKnownPos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0004

END_TESTCASE LBS-Client-LastKnownPos-0003

// This test currently is commented out becuase this behaviour is not supported. A defect has been raised.
START_TESTCASE LBS-Client-LastKnownPos-0004

//!@SYMTestCaseID			LBS-Client-LastKnownPos-0004
//!@SYMTestCaseDesc			Request Last Known Position while the system-wide location on/off parameter is turned off
//!
//!@SYMTestActions			1.Open a sub-session with the network module (specify moduleid)
//!					2.Turn location on/off parameter off, via Admin API
//!					3.Request Last Known Location.
//!					4.Verify that request status received is KErrAccessDenied
//!
//!@SYMTestExpectedResults	Request fails with KErrAccessDenied.
//!
//!@SYMPREQ					PREQ786
//!@SYMREQ 					REQ786.08
//!@SYMPREQ					PREQ162
//!@SYMREQ 					REQ162.04
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Used - Current admin settings not supported by location server.

//RUN_TEST_STEP 010 LbsClientTestServer LbsStep_InstallScheduler
//RUN_TEST_STEP 020 LbsClientTestServer LbsStep_SetUpPsy c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos

//RUN_TEST_STEP 020 LbsClientTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0006
//RUN_TEST_STEP 120 LbsClientTestServer LbsClientStep_LastKnownPos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0006

//END_TESTCASE LBS-Client-LastKnownPos-0004


START_TESTCASE LBS-Client-LastKnownPos-0005

//!@SYMTestCaseID			LBS-Client-LastKnownPos-0005
//!@SYMTestCaseDesc			Cancel Last Known Position request before receiving response
//!
//!@SYMTestActions			1.Request Last Known Location.
//!							2.Cancel Last Known Location request
//!							3.Wait for location request to complete.
//!
//!@SYMTestExpectedResults	Sync Cancel() call returns either KErrNone or KErrNotFound. 
//!							If it returns KErrNone, then the original request may complete with KErrCancel. 
//!
//!@SYMPREQ					PREQ786
//!@SYMREQ 					REQ786.08
//!@SYMREQ 					REQ786.13
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			2
//!@SYMTestStatus			Implemented

RUN_TEST_STEP 010 LbsClientTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsClientTestServer LbsStep_SetUpPsy c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos

RUN_TEST_STEP 020 LbsClientTestServer LbsStep_SetUpPsy c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos


END_TESTCASE LBS-Client-LastKnownPos-0005


START_TESTCASE LBS-Client-LastKnownPos-0006

//!@SYMTestCaseID			LBS-Client-LastKnownPos-0006
//!@SYMTestCaseDesc			Cancel a non-existent request
//!
//!@SYMTestActions			1.Note: do not request Last Known Location.
//!							2.Cancel Last Known Location request.
//!
//!@SYMTestExpectedResults	Cancel fails with KErrNotFound
//!
//!@SYMPREQ					PREQ786
//!@SYMREQ 					REQ786.08
//!@SYMREQ 					REQ786.13
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			2
//!@SYMTestStatus			Implemented
RUN_TEST_STEP 010 LbsClientTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsClientTestServer LbsStep_SetUpPsy c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos

RUN_TEST_STEP 120 LbsClientTestServer LbsClientStep_LastKnownPos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0008


END_TESTCASE LBS-Client-LastKnownPos-0006


START_TESTCASE LBS-Client-LastKnownPos-0007

//!@SYMTestCaseID			LBS-Client-LastKnownPos-0007
//!@SYMTestCaseDesc			Request Last Known Position when not connected to server
//!
//!@SYMTestActions			1.request Last Known Location.
//!					
//!@SYMTestExpectedResults	App will Panic with EPositionServerBadHandle
//!
//!@SYMPREQ					PREQ786
//!@SYMREQ 					REQ786.08
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			2
//!@SYMTestStatus			Implemented
RUN_TEST_STEP 020 LbsClientTestServer LbsStep_SetUpPsy c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos
// No CreatePos step, so Log step wont work


END_TESTCASE LBS-Client-LastKnownPos-0007


//@SYMTestCaseID			TEST_CASE_ID_PLACEHOLDER
//@SYMTestCaseDesc			Request Last Known Position multiple times concurrently on same sub-session
//
//@SYMTestActions			1.Request Last Known Location.
//							2.Request Last Known Position again using same RPositioner sub-session
//
//@SYMTestExpectedResults	App will Panic with EPositionDuplicateRequest
//
//@SYMPREQ					PREQ786
//@SYMREQ 					REQ786.08
//
//@SYMTestType				CIT
//@SYMTestPriority			1
//@SYMTestStatus			Not Implemented - Removed, last known position is synchronous so it's not possible
//							have outstanding requests.


//START_TESTCASE LBS-Client-LastKnownPos-0008

//!@SYMTestCaseID			LBS-Client-LastKnownPos-0008
//!@SYMTestCaseDesc			Request LKP from a busy server 
//!
//!@SYMTestActions			1.CONFIGURE the location server to be busy 
//!					2.Request last known position
//!					3.Wait for request to complete
//!
//!@SYMTestExpectedResults		Request fails with KErrServerBusy
//!
//!@SYMPREQ					PREQ786
//!@SYMREQ 					REQ786.08
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			3
//!@SYMTestStatus			Not Completed - Code does not attempt to make server busy.

//RUN_TEST_STEP 010 LbsClientTestServer LbsStep_InstallScheduler
//RUN_TEST_STEP 020 LbsClientTestServer LbsStep_SetUpPsy c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos

//RUN_TEST_STEP 020 LbsClientTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0012
//RUN_TEST_STEP 120 LbsClientTestServer LbsClientStep_LastKnownPos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0012


//END_TESTCASE LBS-Client-LastKnownPos-0008

//@SYMTestCaseID			TEST_CASE_ID_PLACEHOLDER
//@SYMTestCaseDesc			Request LKP then attempt to close connection before request completes 
//
//@SYMTestActions			1.Request LKP
//							2.Close connection
//
//@SYMTestExpectedResults		Client app will panic with EPositionRequestsNotCancelled
//
//@SYMPREQ					PREQ786
//@SYMREQ 					REQ786.02
//@SYMREQ 					REQ786.08
//
//@SYMTestType				CIT
//@SYMTestPriority			2
//@SYMTestStatus			Not Implemented - Removed, last known position is synchronous so it's not possible
//							have outstanding requests.


//START_TESTCASE LBS-Client-LastKnownPos-0009

//!@SYMTestCaseID			LBS-Client-LastKnownPos-0009
//!@SYMTestCaseDesc			Request multiples LKPs from different clients concurrently - 
//!
//!@SYMTestActions			
//!
//!@SYMTestExpectedResults		Request fails with KErrServerBusy
//!
//!@SYMPREQ					PREQ 786 
//!@SYMREQ 					REQ 786.08 
//!@SYMREQ 					REQ 786.02 
//!@SYMREQ 					REQ 786.19
//!@SYMPREQ					PREQ 89
//!@SYMREQ 					REQ 89.03
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented - Currently multiple clients are not supported.

//RUN_TEST_STEP 010 LbsClientTestServer LbsStep_InstallScheduler
//RUN_TEST_STEP 020 LbsClientTestServer LbsStep_SetUpPsy c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos

//RUN_TEST_STEP 020 LbsClientTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0014
//RUN_TEST_STEP 120 LbsClientTestServer LbsClientStep_LastKnownPos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0014


//END_TESTCASE LBS-Client-LastKnownPos-0009


START_TESTCASE LBS-Client-LastKnownPos-0008

//!@SYMTestCaseID			LBS-Client-LastKnownPos-0008
//!@SYMTestCaseDesc			Request multiples LKPs from different sub-sessions 
//!
//!@SYMTestActions			1.Open multiple sub-sessions and request LKPs on each
//!					2.Wait for requests to complete
//!
//!@SYMTestExpectedResults		All requests are completed successfully, positions are published and summaries logged.
//!
//!@SYMPREQ					PREQ 786 
//!@SYMREQ 					REQ 786.08 
//!@SYMREQ 					REQ 786.02 
//!@SYMREQ 					REQ 786.19
//!@SYMPREQ					PREQ 89
//!@SYMREQ 					REQ 89.03
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Implemented

RUN_TEST_STEP 010 LbsClientTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsClientTestServer LbsStep_SetUpPsy c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos

RUN_TEST_STEP 020 LbsClientTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0015
RUN_TEST_STEP 120 LbsClientTestServer LbsClientStep_LastKnownPos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0015
RUN_TEST_STEP 010 LbsClientTestServer LbsStep_VerifyPosInfos


END_TESTCASE LBS-Client-LastKnownPos-0008


START_TESTCASE LBS-Client-LastKnownPos-0009

//!@SYMTestCaseID			LBS-Client-LastKnownPos-0009
//!@SYMTestCaseDesc			Request multiples LKPs from same sub-session sequentially
//!
//!@SYMTestActions			1.Open a sub-session and request LKP
//!					2.Wait for request to complete
//!					3.Request another LKP
//!					4.Wait for request to complete
//!
//!@SYMTestExpectedResults		All requests are completed successfully, positions are published and summaries logged.
//!
//!@SYMPREQ					PREQ 786 
//!@SYMREQ 					REQ 786.02 
//!@SYMREQ 					REQ 786.08 
//!@SYMREQ 					REQ 786.19
//!@SYMPREQ					PREQ 89
//!@SYMREQ 					REQ 89.03
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Implemented

RUN_TEST_STEP 010 LbsClientTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsClientTestServer LbsStep_SetUpPsy c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos

RUN_TEST_STEP 020 LbsClientTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0016
RUN_TEST_STEP 120 LbsClientTestServer LbsClientStep_LastKnownPos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0016
RUN_TEST_STEP 010 LbsClientTestServer LbsStep_VerifyPosInfos


END_TESTCASE LBS-Client-LastKnownPos-0009


// Selecting the default admin values will ensure the AGPS module requests assistance data.
RUN_TEST_STEP 020 LbsClientTestServer LbsStep_ResetDefaultAdmin

START_TESTCASE LBS-Client-LastKnownPos-0010

//!@SYMTestCaseID			LBS-Client-LastKnownPos-0010
//!@SYMTestCaseDesc			Get Last Known Position when it is in cache
//!
//!@SYMTestActions			1. Request a location update (passing in a TPositionInfo) and
//!								wait for it to complete. Read the timestamp on this location.
//!							2. Request last known Location (should now be in cache).
//!							3. Wait for location request to complete.
//!							4. Verify the return status of the request is KErrNone.
//!							5. Verify that position data is received and that it contains
//!								a timestamp that matches the one from the last request. 
//!							6. Use GetPosition() to get the lat/long/altitude and verify that
//!								they are within the appropriate range.
//!							7. Verify that the location request has been logged.
//!
//!@SYMTestExpectedResults	Location Information is received and is correct. Log contains summary info.
//!
//!@SYMPREQ					PREQ786
//!@SYMREQ 					REQ786.08
//!@SYMREQ 					REQ786.19
//!@SYMPREQ					PREQ89
//!@SYMREQ 					REQ89.03
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Implemented

RUN_TEST_STEP 010 LbsClientTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsClientTestServer LbsStep_SetUpPsy c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos

RUN_TEST_STEP 020 LbsClientTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0101
RUN_TEST_STEP 120 LbsClientTestServer LbsClientStep_LastKnownPos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0101
RUN_TEST_STEP 010 LbsClientTestServer LbsStep_VerifyPosInfos


END_TESTCASE LBS-Client-LastKnownPos-0010


START_TESTCASE LBS-Client-LastKnownPos-0011

//!@SYMTestCaseID			LBS-Client-LastKnownPos-0011
//!@SYMTestCaseDesc			Get Last Known Position when it is in cache passed by Open a sub-session with the network module.
//!
//!@SYMTestActions			1. Open a sub-session with the network module (specify moduleid)
//!                                     2. Request a location update (passing in a TPositionInfo) and
//!                                        wait for it to complete. Read the timestamp on this location.
//!                                     3. Request last known Location (should now be in cache).
//!                                     4. Wait for location request to complete.
//!                                     5. Verify the return status of the request is KErrNone.
//!                                     6. Verify that position data is received and that it contains
//!                                        a timestamp that matches the one from the last request. 
//!                                     7. Use GetPosition() to get the lat/long/altitude and verify that
//!                                        they are within the appropriate range.
//!                                     8. Verify that the location request has been logged.
//!
//!
//!@SYMTestExpectedResults	Location Information is received and is correct. Log contains summary info.
//!
//!@SYMPREQ					PREQ786
//!@SYMREQ 					REQ786.08
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			3
//!@SYMTestStatus			Implemented

RUN_TEST_STEP 010 LbsClientTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsClientTestServer LbsStep_SetUpPsy c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPosNetwork
RUN_TEST_STEP 020 LbsClientTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0105
RUN_TEST_STEP 120 LbsClientTestServer LbsClientStep_LastKnownPos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0105
RUN_TEST_STEP 010 LbsClientTestServer LbsStep_VerifyPosInfos


END_TESTCASE LBS-Client-LastKnownPos-0011


START_TESTCASE LBS-Client-LastKnownPos-0012

//!@SYMTestCaseID			LBS-Client-LastKnownPos-0012
//!@SYMTestCaseDesc			Cancel Last Known Position request before receiving response
//!
//!@SYMTestActions			1.Request Last Known Location.
//!					2.Cancel Last Known Location request
//!					3.Wait for location request to complete.
//!
//!@SYMTestExpectedResults	Sync Cancel() call returns either KErrNone or KErrNotFound. 
//!							If it returns KErrNone, then the original request may complete with KErrCancel. Either way, it is logged.
//!
//!@SYMPREQ					PREQ786
//!@SYMREQ 					REQ786.08
//!@SYMREQ 					REQ786.13
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			2
//!@SYMTestStatus			Implemented

RUN_TEST_STEP 010 LbsClientTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsClientTestServer LbsStep_SetUpPsy c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos

RUN_TEST_STEP 020 LbsClientTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0102
RUN_TEST_STEP 120 LbsClientTestServer LbsClientStep_LastKnownPos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0102


END_TESTCASE LBS-Client-LastKnownPos-0012

START_TESTCASE LBS-Client-LastKnownPos-0013

//!@SYMTestCaseID			LBS-Client-LastKnownPos-0013
//!@SYMTestCaseDesc			Request multiples LKPs from different sub-sessions 
//!
//!@SYMTestActions			1.Open multiple sub-sessions and request LKPs on each
//!					2.Wait for requests to complete
//!
//!@SYMTestExpectedResults		All requests are completed successfully, positions are published and summaries logged.
//!
//!@SYMPREQ					PREQ 786 
//!@SYMREQ 					REQ 786.08 
//!@SYMREQ 					REQ 786.02 
//!@SYMREQ 					REQ 786.19
//!@SYMPREQ					PREQ 89
//!@SYMREQ 					REQ 89.03
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Implemented

RUN_TEST_STEP 010 LbsClientTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsClientTestServer LbsStep_SetUpPsy c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos

RUN_TEST_STEP 020 LbsClientTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0103
RUN_TEST_STEP 120 LbsClientTestServer LbsClientStep_LastKnownPos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0103
RUN_TEST_STEP 010 LbsClientTestServer LbsStep_VerifyPosInfos

END_TESTCASE LBS-Client-LastKnownPos-0013

START_TESTCASE LBS-Client-LastKnownPos-0014

//!@SYMTestCaseID			LBS-Client-LastKnownPos-0014
//!@SYMTestCaseDesc			Request multiples LKPs from same sub-session sequentially
//!
//!@SYMTestActions			1.Open a sub-session and request LKP
//!					2.Wait for request to complete
//!					3.Request another LKP
//!					4.Wait for request to complete
//!
//!@SYMTestExpectedResults		All requests are completed successfully, positions are published and summaries logged.
//!
//!@SYMPREQ					PREQ 786 
//!@SYMREQ 					REQ 786.02 
//!@SYMREQ 					REQ 786.08 
//!@SYMREQ 					REQ 786.19
//!@SYMPREQ					PREQ 89
//!@SYMREQ 					REQ 89.03
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Implemented

RUN_TEST_STEP 010 LbsClientTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsClientTestServer LbsStep_SetUpPsy c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos

RUN_TEST_STEP 020 LbsClientTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0104
RUN_TEST_STEP 120 LbsClientTestServer LbsClientStep_LastKnownPos c:\testdata\configs\LbsClientLastKnownPos.ini LBS-LastKnownPos-0104
RUN_TEST_STEP 010 LbsClientTestServer LbsStep_VerifyPosInfos

END_TESTCASE LBS-Client-LastKnownPos-0014




PRINT Stop LBS
RUN_TEST_STEP 020 LbsClientTestServer LbsStep_StopLbs

// Re-select the real A-GPS integration module.
RUN_UTILS DeleteFile c:\private\10282253\lbs\locmods\agpsintegmodule.ini

// Delete network registration status text file
RUN_UTILS DeleteFile c:\config.txt

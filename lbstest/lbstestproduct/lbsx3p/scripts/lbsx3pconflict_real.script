// Copyright (c) 2006-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

LOAD_SUITE LbsX3PTestServer -SharedData

PRINT Run LbsX3PTestServer
//Before we start LBS, select the network reg status txt file to use.
RUN_UTILS CopyFile c:\testdata\configs\lbstestconfig.txt c:\config.txt

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_ResetDefaultAdmin 
RUN_TEST_STEP 030 LbsX3PTestServer LbsStep_StartLbs


//////////////////////////////////////////////////////////////////////////////
/////////////////	MOLR and X3P(Push) 		//////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


//START_TESTCASE LBS-X3P-ConflictReal-0001
//!@SYMTestCaseID LBS-X3P-ConflictReal-0001
//Not implemented
//END_TESTCASE LBS-X3P-ConflictReal-0001


START_TESTCASE LBS-X3P-ConflictReal-0001

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0001
//!@SYMTestCaseDesc			MoLr when X3P(Push) is called at RegisterLcsMolr
//!
//!@SYMTestActions			1. Request MoLr
//!							2. Wait for RegisterLcsMolr and then Request X3P(Push)
//!							3. Verify that X3P(Push) completes and MoLr cancelled
//!
//!@SYMTestExpectedResults	MoLr request is cancelled and X3P(Push) request completes.
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0002
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0001


START_TESTCASE LBS-X3P-ConflictReal-0002

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0002
//!@SYMTestCaseDesc			MoLr when X3P(Push) is called at ProcessMeasurementControlLocation
//!
//!@SYMTestActions			1. Request MoLr
//!							2. Wait for ProcessMeasurementControlLocation and then Request X3P(Push)
//!							3. Verify that X3P(Push) completes and MoLr cancelled
//!
//!@SYMTestExpectedResults	MoLr request is cancelled and X3P(Push) request completes.
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0003
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0002


START_TESTCASE LBS-X3P-ConflictReal-0003

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0003
//!@SYMTestCaseDesc			MoLr when X3P(Push) is called at ProcessMeasurementReportLocation
//!
//!@SYMTestActions			1. Request MoLr
//!							2. Wait for ProcessMeasurementReportLocation and then Request X3P(Push)
//!							*******3. Verify that X3P(Push) completes and MoLr cancelled
//!
//!@SYMTestExpectedResults	*******MoLr request is cancelled and X3P(Push) request completes.
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0004
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0003


START_TESTCASE LBS-X3P-ConflictReal-0004

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0004
//!@SYMTestCaseDesc			MoLr when X3P(Push) is called at FacilityLcsMoLr
//!
//!@SYMTestActions			1. Request MoLr
//!							2. Wait for FacilityLcsMoLr and then Request X3P(Push)
//!							******3. Verify that X3P(Push) completes and MoLr cancelled
//!
//!@SYMTestExpectedResults	******MoLr request is cancelled and X3P(Push) request completes.
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0005
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyPosInfos
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0004


//////////////////////////////////////////////////////////////////////////////
/////////////////	MOLR and X3P(Timer)		//////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


START_TESTCASE LBS-X3P-ConflictReal-0005

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0005
//!@SYMTestCaseDesc			MoLr when X3P(Timer) is called at RegisterLcsMolr
//!
//!@SYMTestActions			1. Request MoLr
//!							2. Wait for RegisterLcsMolr notifiction and then Request X3P(Timer)
//!							3. Verify that X3P(Timer) is queued and MoLr completes before X3P(Timer)
//!
//!@SYMTestExpectedResults	MoLr request is completed before X3P(Timer) request.
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0012
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyPosInfos
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0005


//////////////////////////////////////////////////////////////////////////////
/////////////////	X3P(Push) and X3P(Timer)	//////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


START_TESTCASE LBS-X3P-ConflictReal-0006

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0006
//!@SYMTestCaseDesc			X3P(Push) and X3P(Timer) are called at same time.
//!
//!@SYMTestActions			1. Create single client (RlbsTransnitPositionServer object)
//!							2. Open multiple sub-sessions (RlbsTransnitPosition objects)
//!							3. On 1st sub-session, request X3P(Push).
//!							4. On 2nd sub-session, request X3P(Timer).
//!							5. Wait for requests to complete.
//!							6. Verify that X3P(Push) completes before X3P(Timer)
//!
//!@SYMTestExpectedResults	X3P(Push) completes before X3P(Timer) request.
//!							Locations reported and received match what test-module sent.
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0021
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyPosInfos
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0006


START_TESTCASE LBS-X3P-ConflictReal-0007

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0007
//!@SYMTestCaseDesc			X3P(Push) when X3P(Timer) is called at RegisterLcsMolr
//!
//!@SYMTestActions			1. Create single client (RlbsTransnitPositionServer object)
//!							2. Open multiple sub-sessions (RlbsTransnitPosition objects)
//!							3. On 1st sub-session, request X3P(Push).
//!							4. Wait for RegisterLcsMoLr notification from netsim and then on 2nd sub-session, request X3P(Timer).
//!							5. Wait for requests to complete.
//!							6. Verify that X3P(Push) completes before X3P(Timer)
//!
//!@SYMTestExpectedResults	X3P(Push) request is completed before X3P(Timer) request.
//!							Locations reported and received match what test-module sent.
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0022
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyPosInfos
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0007


////////////////////////////////////////////////////////////////////////////
////////////////       X3P(Push) and MTLR        //////////////////////////////////
///////////////////////////////////////////////////////////////////////////


START_TESTCASE LBS-X3P-ConflictReal-0008

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0008
//!@SYMTestCaseDesc			X3P(Push) and MTLR are called at same time
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P(Push)
//!							3. Request MTLR
//!							4. Verify that X3P(Push) completes and MTLR is cancelled
//!
//!@SYMTestExpectedResults	X3P(Push) request is completed and MTLR is cancelled.
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0031
//RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyPosInfos
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0008


START_TESTCASE LBS-X3P-ConflictReal-0009

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0009
//!@SYMTestCaseDesc			X3P(Push) when MTLR is called at RegisterLcsMolr
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P(Push)
//!							3. Wait for RegisterLcsMolr notifiction and then Request MTLR
//!							4. Verify that X3P(Push) completes and MTLR canceled
//!
//!@SYMTestExpectedResults	X3P(Push) request is completed and MTLR is cancelled.
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0032
//RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyPosInfos
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0009


START_TESTCASE LBS-X3P-ConflictReal-0010

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0010
//!@SYMTestCaseDesc			X3P(Push) when MTLR is called at ProcessMeasurementReportLocation
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P(Push)
//!							3. Wait for ProcessMeasurementReportLocation notifiction and then Request MTLR
//!							4. Verify that X3P(Push) completes and MTLR canceled
//!
//!@SYMTestExpectedResults	*****TBD
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0034
//RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyPosInfos
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0010


START_TESTCASE LBS-X3P-ConflictReal-0011

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0011
//!@SYMTestCaseDesc			X3P(Push) when MTLR is called at ProcessMeasurementReportLocation
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P(Push)
//!							3. Wait for ReleaseLcsMoLr notifiction and then Request MTLR
//!							4. Verify that X3P(Push) completes and then MTLR completes
//!
//!@SYMTestExpectedResults	Both request are completed - First X3P(Push) and then MTLR
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0035
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyPosInfos
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0011


/////////////////////////////////////////////////////////////////////////////
//////////////////     X3P(Push) and E-MTLR     //////////////////////////////////
////////////////////////////////////////////////////////////////////////////


START_TESTCASE LBS-X3P-ConflictReal-0012

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0012
//!@SYMTestCaseDesc			X3P(Push) when E-MTLR is called at RegisterLcsMoLr
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P(Push)
//!							3. Wait for RegisterLcsMoLr notification and then request Request E-MTLR
//!							4. Verify that both requests complete and E-MTLR completes before X3P(Push)
//!
//!@SYMTestExpectedResults	both requests complete and E-MTLR completes before X3P(Push)
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0042
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0012


START_TESTCASE LBS-X3P-ConflictReal-0013

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0013
//!@SYMTestCaseDesc			X3P(Push) when E-MTLR is called at MeasurementControlLocation
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P(Push)
//!							3. Wait for MeasurementControlLocation notification and then request Request E-MTLR
//!							4. Verify that both requests complete and E-MTLR completes before X3P(Push)
//!
//!@SYMTestExpectedResults	both requests complete and E-MTLR completes before X3P(Push)
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0043
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0013


START_TESTCASE LBS-X3P-ConflictReal-0014

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0014
//!@SYMTestCaseDesc			X3P(Push) when E-MTLR is called at MeasurementReportLocation
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P(Push)
//!							3. Wait for MeasurementReportLocation notification and then request Request E-MTLR
//!							4. Verify that both requests complete and E-MTLR completes before X3P(Push)
//!
//!@SYMTestExpectedResults	both requests complete and E-MTLR completes before X3P(Push)
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0044
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0014


START_TESTCASE LBS-X3P-ConflictReal-0015

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0015
//!@SYMTestCaseDesc			X3P(Push) when E-MTLR is called at ReleaseLcsMoLr
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P(Push)
//!							3. Wait for ReleaseLcsMoLr notification and then request Request E-MTLR
//!							4. Verify that both requests complete and X3P(Push) completes before E-MTLR
//!
//!@SYMTestExpectedResults	both requests complete and X3P(Push) completes before E-MTLR
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0045
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyPosInfos
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0015


//////////////////////////////////////////////////////////////////////////////
/////////////////	X3P(Menu) and X3P(Push)	//////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


//START_TESTCASE LBS-X3P-ConflictReal-0017
//!@SYMTestCaseID LBS-X3P-ConflictReal-0017
//Not implemented
//END_TESTCASE LBS-X3P-ConflictReal-0017


//START_TESTCASE LBS-X3P-ConflictReal-0018
//!@SYMTestCaseID LBS-X3P-ConflictReal-0018
//Not a MUST Test
//END_TESTCASE LBS-X3P-ConflictReal-0018


START_TESTCASE LBS-X3P-ConflictReal-0016

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0016
//!@SYMTestCaseDesc			X3P(Menu) when X3P(Push) called at ProcessMeasurementControlLocation
//!
//!@SYMTestActions			1. Create single client (RlbsTransnitPositionServer object)
//!							2. Open multiple sub-sessions (RlbsTransnitPosition objects)
//!							3. On 1st sub-session, request X3P(Menu).
//!							4. Wait for ProcessMeasurementControlLocation notification and then on 2nd sub-session, request X3P(Push).
//!							5. Wait for requests to complete.
//!
//!@SYMTestExpectedResults	X3P(Menu) should be cancelled and X3P(Push) will complete successfully
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0053
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0016


START_TESTCASE LBS-X3P-ConflictReal-0017

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0017
//!@SYMTestCaseDesc			X3P(Menu) when X3P(Push) called at ProcessMeasurementReportLocation
//!
//!@SYMTestActions			1. Create single client (RlbsTransnitPositionServer object)
//!							2. Open multiple sub-sessions (RlbsTransnitPosition objects)
//!							3. On 1st sub-session, request X3P(Menu).
//!							4. Wait for ProcessMeasurementReportLocation notification and then on 2nd sub-session, request X3P(Push).
//!							5. Wait for requests to complete.
//!
//!@SYMTestExpectedResults	X3P(Menu) completes and then X3P(Push) completes
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0054
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyPosInfos
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0017


//START_TESTCASE LBS-X3P-ConflictReal-0021
//!@SYMTestCaseID LBS-X3P-ConflictReal-0021
//Not a MUST Test
//END_TESTCASE LBS-X3P-ConflictReal-0021


//////////////////////////////////////////////////////////////////////////////
/////////////////	X3P(Menu) and X3P(Timer)	//////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


//START_TESTCASE LBS-X3P-ConflictReal-0022
//!@SYMTestCaseID LBS-X3P-ConflictReal-0022
// Not Implemented. 
//END_TESTCASE LBS-X3P-ConflictReal-0022


START_TESTCASE LBS-X3P-ConflictReal-0018

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0018
//!@SYMTestCaseDesc			X3P(Menu) when X3P(Timer) is called at RegisterLcsMoLr
//!
//!@SYMTestActions			1. Create single client (RlbsTransnitPositionServer object)
//!							2. Open multiple sub-sessions (RlbsTransnitPosition objects)
//!							3. On 1st sub-session, request X3P(Menu).
//!							4. Wait for RegisterLcsMoLr notification and then on 2nd sub-session, request X3P(Timer).
//!							5. Wait for requests to complete.
//!
//!@SYMTestExpectedResults	X3P(Timer) is queued and X3P(Menu) should complete first and then X3P(Timer) request completes.
//!							Locations reported and received match what test-module sent.
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0062
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyPosInfos
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0018


//START_TESTCASE LBS-X3P-ConflictReal-0024
//!@SYMTestCaseID LBS-X3P-ConflictReal-0024
//Not a MUST Test
//END_TESTCASE LBS-X3P-ConflictReal-0024


//START_TESTCASE LBS-X3P-ConflictReal-0025
//!@SYMTestCaseID LBS-X3P-ConflictReal-0025
//Not a MUST Test
//END_TESTCASE LBS-X3P-ConflictReal-0025


//START_TESTCASE LBS-X3P-ConflictReal-0026
//!@SYMTestCaseID LBS-X3P-ConflictReal-0026
//Not a MUST Test
//END_TESTCASE LBS-X3P-ConflictReal-0026


//////////////////////////////////////////////////////////////////////////////
/////////////////	X3P(Menu) and MTLR	//////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


//START_TESTCASE LBS-X3P-ConflictReal-0027
//!@SYMTestCaseID LBS-X3P-ConflictReal-0027
//Not Implemented
//END_TESTCASE LBS-X3P-ConflictReal-0027


START_TESTCASE LBS-X3P-ConflictReal-0019

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0019
//!@SYMTestCaseDesc			X3P(Menu) when MTLR is called at RegisterLcsMoLr
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P(Menu)
//!							3. Wait for RegisterLcsMoLr and then request MTLR
//!							4. Wait for requests to complete
//!
//!@SYMTestExpectedResults	X3P(Menu) completes and MTLR is cancelled
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0072
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0019


//START_TESTCASE LBS-X3P-ConflictReal-0029
//!@SYMTestCaseID LBS-X3P-ConflictReal-0029
//Not a MUST Test
//END_TESTCASE LBS-X3P-ConflictReal-0029


START_TESTCASE LBS-X3P-ConflictReal-0020

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0020
//!@SYMTestCaseDesc			X3P(Menu) when MTLR is called at ProcessMeasurementReportLocation
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P(Menu)
//!							3. Wait for ProcessMeasurementReportLocation notification and then Request MTLR
//!							4. Wait for requests to complete
//!
//!@SYMTestExpectedResults	X3P(Menu) completes and MTLR is cancelled
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0074
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0020


START_TESTCASE LBS-X3P-ConflictReal-0021

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0021
//!@SYMTestCaseDesc			X3P(Menu) when MTLR is called at RelaseLcsMoLr
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P(Menu)
//!							3. Wait for RelaseLcsMoLr notification and then Request MTLR
//!							4. Wait for requests to complete
//!
//!@SYMTestExpectedResults	Both requests complete - first X3P(Menu) and MTLR
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0075
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyPosInfos
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0021


//////////////////////////////////////////////////////////////////////////////
/////////////////	X3P(Menu) and E-MTLR		//////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


//START_TESTCASE LBS-X3P-ConflictReal-0032
//!@SYMTestCaseID LBS-X3P-ConflictReal-0032
//Not Implemented
//END_TESTCASE LBS-X3P-ConflictReal-0032


START_TESTCASE LBS-X3P-ConflictReal-0022

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0022
//!@SYMTestCaseDesc			X3P(Menu) when E-MTLR is called at RegisterLcsMoLr
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P(Menu)
//!							3. Wait for RegisterLcsMoLr and then Request E-MTLR
//!							4. Wait for Requests to complete
//!
//!@SYMTestExpectedResults	both requests complete and E-MTLR completes before X3P(Menu)
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0082
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0022


START_TESTCASE LBS-X3P-ConflictReal-0023

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0023
//!@SYMTestCaseDesc			X3P(Menu) when E-MTLR is called at ProcessMeasurementControlLocation
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P(Menu)
//!							3. Wait for ProcessMeasurementControlLocation and then request E-MTLR
//!							4. Wait for Requests to complete
//!
//!@SYMTestExpectedResults	both requests complete and E-MTLR completes before X3P(Menu)
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0083
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0023


START_TESTCASE LBS-X3P-ConflictReal-0024

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0024
//!@SYMTestCaseDesc			X3P(Menu) when E-MTLR called at ProcessMeasureReportLocation
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P(Menu)
//!							3. Wait for ProcessMeasurementReportLocation and Request E-MTLR
//!							4. Wait for Requests to complete
//!
//!@SYMTestExpectedResults	both requests complete and E-MTLR completes before X3P(Menu)
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0084
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0024


START_TESTCASE LBS-X3P-ConflictReal-0025

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0025
//!@SYMTestCaseDesc			X3P(Menu) when E-MTLR called at ReleaseLcsMoLr
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P(Menu)
//!							3. Wait for ReleaseLcsMoLr and Request E-MTLR
//!							4. Wait for Requests to complete
//!
//!@SYMTestExpectedResults	both requests complete and X3P(Menu) completes before E-MTLR
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0085
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyPosInfos
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0025


//////////////////////////////////////////////////////////////////////////////
/////////////////	X3P(Timer) and X3P(Push)	//////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


//START_TESTCASE LBS-X3P-ConflictReal-0037
//!@SYMTestCaseID LBS-X3P-ConflictReal-0037
//Not a MUST test
//END_TESTCASE LBS-X3P-ConflictReal-0037


//START_TESTCASE LBS-X3P-ConflictReal-0038
//!@SYMTestCaseID LBS-X3P-ConflictReal-0038
//Not a MUST test
//END_TESTCASE LBS-X3P-ConflictReal-0038


START_TESTCASE LBS-X3P-ConflictReal-0026

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0026
//!@SYMTestCaseDesc			X3P(Timer) when X3P(Push) called at ProcessMeasurementControlLocation
//!
//!@SYMTestActions			1. Create single client (RlbsTransnitPositionServer object)
//!							2. Open multiple sub-sessions (RlbsTransnitPosition objects)
//!							3. On 1st sub-session, request X3P(Timer).
//!							4. Wait for ProcessMeasurementControlLocation notification and then on 2nd sub-session, request X3P(Push).
//!							5. Wait for requests to complete.
//!
//!@SYMTestExpectedResults	X3P(TImer) request would be queued and X3P(Push) will finish before X3P(Timer)
//!							Locations reported and received match what test-module sent.
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0093
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0026


START_TESTCASE LBS-X3P-ConflictReal-0027

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0027
//!@SYMTestCaseDesc			X3P(Timer) when X3P(Push) called at ProcessMeasurementReportLocation
//!
//!@SYMTestActions			1. Create single client (RlbsTransnitPositionServer object)
//!							2. Open multiple sub-sessions (RlbsTransnitPosition objects)
//!							3. On 1st sub-session, request X3P(Timer).
//!							4. Wait for ProcessMeasurementReportLocation notification and then on 2nd sub-session, request X3P(Push).
//!							5. Wait for requests to complete.
//!
//!@SYMTestExpectedResults	both requests complete and X3P(Timer) complets before X3P(Push)
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0094
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyPosInfos
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0027


//START_TESTCASE LBS-X3P-ConflictReal-0041
//!@SYMTestCaseID LBS-X3P-ConflictReal-0041
//Not a MUST test
//END_TESTCASE LBS-X3P-ConflictReal-0041


//////////////////////////////////////////////////////////////////////////////
/////////////////	X3P(Timer) and X3P(Timer)	//////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


//START_TESTCASE LBS-X3P-ConflictReal-0042
//!@SYMTestCaseID LBS-X3P-ConflictReal-0042
//Not a MUST test
//END_TESTCASE LBS-X3P-ConflictReal-0042


START_TESTCASE LBS-X3P-ConflictReal-0028

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0028
//!@SYMTestCaseDesc			X3P(Timer) when X3P(Timer) is called at RegisterLcsMoLr
//!
//!@SYMTestActions			1. Create single client (RlbsTransnitPositionServer object)
//!							2. Open multiple sub-sessions (RlbsTransnitPosition objects)
//!							3. On 1st sub-session, request X3P(Timer).
//!							4. Wait for RegisterLcsMoLr notification and then on 2nd sub-session, request X3P(Timer).
//!							5. Wait for requests to complete.
//!
//!@SYMTestExpectedResults	The first X3P(Timer) request should complete before second X3P(Timer) request.
//!							Locations reported and received match what test-module sent.
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0102
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyPosInfos
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0028


//START_TESTCASE LBS-X3P-ConflictReal-0044
//!@SYMTestCaseID LBS-X3P-ConflictReal-0044
//Not a MUST test
//END_TESTCASE LBS-X3P-ConflictReal-0044


//START_TESTCASE LBS-X3P-ConflictReal-0045
//!@SYMTestCaseID LBS-X3P-ConflictReal-0045
//Not a MUST test
//END_TESTCASE LBS-X3P-ConflictReal-0045


//START_TESTCASE LBS-X3P-ConflictReal-0046
//!@SYMTestCaseID LBS-X3P-ConflictReal-0046
//Not a MUST test
//END_TESTCASE LBS-X3P-ConflictReal-0046


//////////////////////////////////////////////////////////////////////////////
/////////////////	X3P(Timer) and MTLR	//////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


//START_TESTCASE LBS-X3P-ConflictReal-0047
//!@SYMTestCaseID LBS-X3P-ConflictReal-0047
//Not Implemented
//END_TESTCASE LBS-X3P-ConflictReal-0047


START_TESTCASE LBS-X3P-ConflictReal-0029

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0029
//!@SYMTestCaseDesc			X3P(Timer) when MTLR is called at RegisterLcsMoLr
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P(Timer)
//!							3. Wait for RegisterLcsMoLr and then Request MTLR
//!							4. Wait for requests to complete
//!
//!@SYMTestExpectedResults	X3P(Timer) should complete successfully and MTLR request would be cancelled
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0112
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0029


//START_TESTCASE LBS-X3P-ConflictReal-0049
//!@SYMTestCaseID LBS-X3P-ConflictReal-0049
//Not a MUST test
//END_TESTCASE LBS-X3P-ConflictReal-0049


START_TESTCASE LBS-X3P-ConflictReal-0030

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0030
//!@SYMTestCaseDesc			X3P(Timer) when MTLR is called at MeasurementReportLocation
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P(Timer)
//!							3. Wait for MeasurementReportLocation and then Request MTLR
//!							4. Wait for requests to complete
//!
//!@SYMTestExpectedResults	X3P(Timer) should complete successfully and MTLR request would be cancelled
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0114
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0030


START_TESTCASE LBS-X3P-ConflictReal-0031

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0031
//!@SYMTestCaseDesc			X3P(Timer) when MTLR is called at ReleaseLcsMoLr
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P(Timer)
//!							3. Wait for ReleaseLcsMoLr and then Request MTLR
//!							4. Wait for requests to complete
//!
//!@SYMTestExpectedResults	X3P(Timer) should complete successfully and then MTLR should complete
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0115
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyPosInfos
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0031


//////////////////////////////////////////////////////////////////////////////
/////////////////	X3P(Timer) and E-MTLR		//////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


//START_TESTCASE LBS-X3P-ConflictReal-0052
//!@SYMTestCaseID LBS-X3P-ConflictReal-0052
//Not Implemented
//END_TESTCASE LBS-X3P-ConflictReal-0052


START_TESTCASE LBS-X3P-ConflictReal-0032

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0032
//!@SYMTestCaseDesc			X3P(Timer) when E-MTLR is called at RegisterLcsMoLr
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P(Timer)
//!							3. Wait for RegisterLcsMoLr and then Request E-MTLR
//!							4. Wait for requests to complete
//!
//!@SYMTestExpectedResults	Both requests complete - First E-MTLR and then X3P(Timer)
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0122
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0032


START_TESTCASE LBS-X3P-ConflictReal-0033

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0033
//!@SYMTestCaseDesc			X3P(Timer) when E-MTLR is called at ProcessMeasurementControlLocation
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P(Timer)
//!							3. Wait for ProcessMeasurementControlLocation and then Request E-MTLR
//!							4. Wait for requests to complete
//!
//!@SYMTestExpectedResults	Both requests complete - First E-MTLR and then X3P(Timer)
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0123
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0033


START_TESTCASE LBS-X3P-ConflictReal-0034

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0034
//!@SYMTestCaseDesc			X3P(Timer) when E-MTLR is called at ProcessMeasurementReportLocation
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P(Timer)
//!							3. Wait for ProcessMeasurementReportLocation and then Request E-MTLR
//!							4. Wait for requests to complete
//!
//!@SYMTestExpectedResults	Both requests complete - First E-MTLR and then X3P(Timer)
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0124
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0034


START_TESTCASE LBS-X3P-ConflictReal-0035

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0035
//!@SYMTestCaseDesc			X3P(Timer) when E-MTLR is called at ReleaseLcsMoLr
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P(Timer)
//!							3. Wait for ReleaseLcsMoLr and then Request E-MTLR
//!							4. Wait for requests to complete
//!
//!@SYMTestExpectedResults	Both requests complete - First X3P(Timer) and then E-MTLR
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0125
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyPosInfos
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo
END_TESTCASE LBS-X3P-ConflictReal-0035


//////////////////////////////////////////////////////////////////////////////
/////////////////		MTLR and X3P(Push)	//////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


//START_TESTCASE LBS-X3P-ConflictReal-0057
//!@SYMTestCaseID LBS-X3P-ConflictReal-0057
//Not a MUST test
//END_TESTCASE LBS-X3P-ConflictReal-0057


//START_TESTCASE LBS-X3P-ConflictReal-0058
//!@SYMTestCaseID LBS-X3P-ConflictReal-0058
//Not a MUST test
//END_TESTCASE LBS-X3P-ConflictReal-0058


START_TESTCASE LBS-X3P-ConflictReal-0036

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0036
//!@SYMTestCaseDesc			MTLR when X3P(Push) called at ReleaseLcsLocation
//!
//!@SYMTestActions			1. Request MTLR
//!							2. Wait for ReleaseLcsLocation and then Request X3P(Push)
//!							3. Wait for requests to complete
//!
//!@SYMTestExpectedResults	MTLR would be cancelled and X3P(Push) would complete successfully.
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0133
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0036


START_TESTCASE LBS-X3P-ConflictReal-0037

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0037
//!@SYMTestCaseDesc			MTLR when X3P(Push) called at ProcessMeasurementControlLocation
//!
//!@SYMTestActions			1. Request MTLR
//!							2. Wait for ProcessMeasurementControlLocation and then Request X3P(Push)
//!							3. Wait for requests to complete
//!
//!@SYMTestExpectedResults	MTLR would be cancelled and X3P(Push) would complete successfully.
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0134
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0037


START_TESTCASE LBS-X3P-ConflictReal-0038

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0038
//!@SYMTestCaseDesc			MTLR when X3P(Push) called at ProcessMeasurementReportLocation
//!
//!@SYMTestActions			1. Request MTLR
//!							2. Wait for ProcessMeasurementReportLocation and then Request X3P(Push)
//!							3. Wait for requests to complete
//!
//!@SYMTestExpectedResults	Both requests should complete - first MTLR and then X3P(Push)
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0135
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyPosInfos
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0038


//////////////////////////////////////////////////////////////////////////////
/////////////////		MTLR and X3P(Timer)	//////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


//START_TESTCASE LBS-X3P-ConflictReal-0062
//!@SYMTestCaseID LBS-X3P-ConflictReal-0062
//NA
//END_TESTCASE LBS-X3P-ConflictReal-0062


//START_TESTCASE LBS-X3P-ConflictReal-0063
//!@SYMTestCaseID LBS-X3P-ConflictReal-0063
//Not a MUST test
//END_TESTCASE LBS-X3P-ConflictReal-0063


START_TESTCASE LBS-X3P-ConflictReal-0039

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0039
//!@SYMTestCaseDesc			MTLR when X3P(Timer) is called at RegisterLcsLocation
//!
//!@SYMTestActions			1. Request MTLR
//!							2. Wait for RegisterLcsLocation and then Request X3P(Timer)
//!							3. Wait for requests to complete
//!
//!@SYMTestExpectedResults	X3P(Timer) would be queued and MTLR would finish first and then X3P(TImer) would complete.
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0143
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyPosInfos
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0039


START_TESTCASE LBS-X3P-ConflictReal-0040

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0040
//!@SYMTestCaseDesc			MTLR when X3P(Timer) is called at ProcessMeasurementControlLocation
//!
//!@SYMTestActions			1. Request MTLR
//!							2. Wait for ProcessMeasurementControlLocation and then Request X3P(Timer)
//!							3. Wait for requests to complete
//!
//!@SYMTestExpectedResults	X3P(Timer) would be queued and MTLR would finish first and then X3P(TImer) would complete.
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-0144
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyPosInfos
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0040


//START_TESTCASE LBS-X3P-ConflictReal-0066
//!@SYMTestCaseID LBS-X3P-ConflictReal-0066
//Not a MUST test
//END_TESTCASE LBS-X3P-ConflictReal-0066


//////////////////////////////////////////////////////////////////////////////
/////////////////	E-MTLR and X3P(Push)		//////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


//START_TESTCASE LBS-X3P-ConflictReal-0067
//!@SYMTestCaseID LBS-X3P-ConflictReal-0067
//NA
//END_TESTCASE LBS-X3P-ConflictReal-0067


//START_TESTCASE LBS-X3P-ConflictReal-0068
//!@SYMTestCaseID LBS-X3P-ConflictReal-0068
//Not implemented
//END_TESTCASE LBS-X3P-ConflictReal-0068


//START_TESTCASE LBS-X3P-ConflictReal-0069
//!@SYMTestCaseID LBS-X3P-ConflictReal-0069
//Not implemented
//END_TESTCASE LBS-X3P-ConflictReal-0069


//START_TESTCASE LBS-X3P-ConflictReal-0070
//!@SYMTestCaseID LBS-X3P-ConflictReal-0070
//Not implemented
//END_TESTCASE LBS-X3P-ConflictReal-0070


//START_TESTCASE LBS-X3P-ConflictReal-0071
//!@SYMTestCaseID LBS-X3P-ConflictReal-0071
//Not implemented
//END_TESTCASE LBS-X3P-ConflictReal-0071


//////////////////////////////////////////////////////////////////////////////
/////////////////	E-MTLR and X3P(Timer)		//////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


//START_TESTCASE LBS-X3P-ConflictReal-0072
//!@SYMTestCaseID LBS-X3P-ConflictReal-0072
//NA
//END_TESTCASE LBS-X3P-ConflictReal-0072


//START_TESTCASE LBS-X3P-ConflictReal-0073
//!@SYMTestCaseID LBS-X3P-ConflictReal-0073
//Not implemented
//END_TESTCASE LBS-X3P-ConflictReal-0073


//START_TESTCASE LBS-X3P-ConflictReal-0074
//!@SYMTestCaseID LBS-X3P-ConflictReal-0074
//Not a MUST test
//END_TESTCASE LBS-X3P-ConflictReal-0074


//START_TESTCASE LBS-X3P-ConflictReal-0075
//!@SYMTestCaseID LBS-X3P-ConflictReal-0075
//Not a MUST test
//END_TESTCASE LBS-X3P-ConflictReal-0075


//START_TESTCASE LBS-X3P-ConflictReal-0076
//!@SYMTestCaseID LBS-X3P-ConflictReal-0076
//Not a MUST test
//END_TESTCASE LBS-X3P-ConflictReal-0076


//////////////////////////////////////////////////////////////////////////////
/////////////////		Other Conflicts		//////////////////////////////////
//////////////////////////////////////////////////////////////////////////////


START_TESTCASE LBS-X3P-ConflictReal-0041

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0041
//!@SYMTestCaseDesc			MO-LR pre-empted by EMERGENCY NI-LR
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request X3P
//!							3. Ask NetSim to send a network induced emergency request
//!							4. Verify that emergency location is sent to network (Notification from NetSim) before the X3P request completes (RunL_TransmitPositionResult())
//!
//!@SYMTestExpectedResults	X3P request is queued until after SOS request completes and then completes successfully
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06 ?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-1001
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0041


START_TESTCASE LBS-X3P-ConflictReal-0042

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0042
//!@SYMTestCaseDesc			MO-LR pre-empted by EMERGENCY NI-LR
//!
//!@SYMTestActions			1. Configure test a-gps with a min response time (so X3P doesn't complete before emergency request received)
//!							2. Request multiple X3Ps (2?) with different priorities.
//!							3. Ask NetSim to send a network induced emergency request
//!							4. Verify that emergency location is sent to network (Notification from NetSim) before the X3P request completes (RunL_TransmitPositionResult())
//!
//!@SYMTestExpectedResults	X3P requests are queued until after SOS request completes and then complete successfully in priority order
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.06 ?
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-1002
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-1002
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0042


START_TESTCASE LBS-X3P-ConflictReal-0043

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0043
//!@SYMTestCaseDesc			Two X3P requests from same sub-session object.
//!
//!@SYMTestActions			1. Create single client (RlbsTransnitPositionServer object)
//!							2. Open a sub-session (RlbsTransnitPosition objects)
//!							3. Request X3P(Push) or any.
//!							4. Request X3P(Timer) or any.
//!							5. Wait for requests to complete.
//!
//!@SYMTestExpectedResults	*****TBD
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.02
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-1003
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyPosInfos
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0043


START_TESTCASE LBS-X3P-ConflictReal-0044

//!@SYMTestCaseID			LBS-X3P-ConflictReal-0044
//!@SYMTestCaseDesc			MoLr, X3P and MTLR at same time
//!
//!@SYMTestActions			1. Request MoLr
//!							2. Request X3P(any)
//!							3. Request MTLR
//!							5. Wait for requests to complete.
//!
//!@SYMTestExpectedResults	*****TBD
//!
//!@SYMPREQ				PREQ163
//!@SYMREQ 					163.02
//!
//!@SYMTestType				CIT
//!@SYMTestPriority			1
//!@SYMTestStatus			Not Implemented. 

RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_InstallScheduler
RUN_TEST_STEP 020 LbsX3PTestServer LbsStep_CreateVerifyPosInfos c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-Common
RUN_TEST_STEP 180 LbsX3PTestServer LbsX3PStep_Conflict c:\testdata\configs\lbsx3pconflict_real.ini LBS-X3P-Conflict-1004
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyPosInfos
RUN_TEST_STEP 010 LbsX3PTestServer LbsStep_VerifyLogInfo

END_TESTCASE LBS-X3P-ConflictReal-0044

PRINT Stop LBS
RUN_TEST_STEP 020 LbsMTLRTestServer LbsStep_StopLbs

// Delete network registration status text file
RUN_UTILS DeleteFile c:\config.txt

[LBS-MOLR-Tracking]
psy_uid=0x101fe98c

[MOLR-ATA-TRACKING-2CLIENTS-1]
agps_module_update_file = c:\testdata\configs\lbs_molr_tracking.ini
$update,30,4,NAN,NAN,NAN,NAN,NAN*
// The network will request TA
NetworkMethod = 3
// It is expected that the network will return the position
PositionOriginator = 2
expected_api_behaviour = 1
PositioningIndicator = 2

// The client information
// first client: session ID delay = 0, session step delay = 0, NPUDs = 15, interval = 5s, time out = 3s, max age = 0s, accept partial = false
$clientdetails,0,0,15,5000000,3000000,0,false*
// second client: session ID delay = 1, session step delay = 3, NPUDs = 9, interval = 10s, time out = 5s, max age = 0s, accept partial = false
$clientdetails,1,3,9,10000000,5000000,0,false*

[MOLR-ATA-TRACKING-2CLIENTS-2]
agps_module_update_file = c:\testdata\configs\lbs_molr_tracking.ini
$update,30,4,NAN,NAN,NAN,NAN,NAN*
// The network will request TA
NetworkMethod = 3
// It is expected that the network will return the position
PositionOriginator = 2
expected_api_behaviour = 1
PositioningIndicator = 2

// The client information
// first client: session ID delay = 0, session step delay = 0, NPUDs = 8, interval = 10s, time out = 5s, max age = 0s, accept partial = false
$clientdetails,0,0,8,10000000,5000000,0,false*
// second client: session ID delay = 1, session step delay = 6, NPUDs = 12, interval = 7s, time out = 3s, max age = 0s, accept partial = false
$clientdetails,1,6,12,7000000,3000000,0,false*

[MOLR-ATA-TRACKING-3CLIENTS-1]
agps_module_update_file = c:\testdata\configs\lbs_molr_tracking.ini
$update,50,4,NAN,NAN,NAN,NAN,NAN*
// The network will request TA
NetworkMethod = 3
// It is expected that the network will return the position
PositionOriginator = 2
expected_api_behaviour = 1
PositioningIndicator = 2

// The client information
// first client: session ID delay = 0, session step delay = 0, interval = 5s, time out = 4s, max age = 0s, accept partial = false
$clientdetails,0,0,20,5000000,4000000,0,false*
// second client: session ID delay = 1, session step delay = 3, NPUDs = 10, interval = 9s, time out = 4s, max age = 0s, accept partial = false
$clientdetails,1,3,10,9000000,4000000,0,false*
// third client: session ID delay = 1, session step delay = 6, NPUDs = 15, interval = 7s, time out = 4s, max age = 0s, accept partial = false
$clientdetails,1,6,15,7000000,4000000,0,false*


[MOLR-HYBRID-TRACKING-2CLIENTS-1]
agps_module_update_file = c:\testdata\configs\lbs_molr_tracking.ini
$update,30,4,3.5,2.8,500,10,10*
// The network will request TB+TA
NetworkMethod = 2
// It is expected that the module will return the position
PositionOriginator = 1
expected_api_behaviour = 1
PositioningIndicator = 2

// The client information
// first client: session ID delay = 0, session step delay = 0, NPUDs = 15, interval = 5s, time out = 3s, max age = 0s, accept partial = false
$clientdetails,0,0,15,5000000,3000000,0,false*
// second client: session ID delay = 1, session step delay = 3, NPUDs = 9, interval = 10s, time out = 5s, max age = 0s, accept partial = false
$clientdetails,1,3,9,10000000,5000000,0,false*

[MOLR-HYBRID-TRACKING-2CLIENTS-2]
agps_module_update_file = c:\testdata\configs\lbs_molr_tracking.ini
$update,30,4,3.5,2.8,500,10,10*
// The network will request TB+TA
NetworkMethod = 2
// It is expected that the module will return the position
PositionOriginator = 1
expected_api_behaviour = 1
PositioningIndicator = 2

// The client information
// first client: session ID delay = 0, session step delay = 0, NPUDs = 8, interval = 10s, time out = 5s, max age = 0s, accept partial = false
$clientdetails,0,0,8,10000000,5000000,0,false*
// second client: session ID delay = 1, session step delay = 6, NPUDs = 12, interval = 7s, time out = 3s, max age = 0s, accept partial = false
$clientdetails,1,6,12,7000000,3000000,0,false*

[MOLR-HYBRID-TRACKING-3CLIENTS-1]
agps_module_update_file = c:\testdata\configs\lbs_molr_tracking.ini
$update,50,4,3.5,2.8,500,10,10*
// The network will request TB+TA
NetworkMethod = 2
// It is expected that the module will return the position
PositionOriginator = 1
expected_api_behaviour = 1
PositioningIndicator = 2

// The client information
// first client: session ID delay = 0, session step delay = 0, interval = 5s, time out = 3s, max age = 0s, accept partial = false
$clientdetails,0,0,20,5000000,3000000,0,false*
// second client: session ID delay = 1, session step delay = 3, NPUDs = 10, interval = 9s, time out = 3s, max age = 0s, accept partial = false
$clientdetails,1,3,10,9000000,3000000,0,false*
// third client: session ID delay = 1, session step delay = 6, NPUDs = 15, interval = 7s, time out = 3s, max age = 0s, accept partial = false
$clientdetails,1,6,15,7000000,3000000,0,false*

[MOLR-ATA-WARMDOWNTIMER-1]
agps_module_update_file = c:\testdata\configs\lbs_molr_tracking.ini
$update,30,4,NAN,NAN,NAN,NAN,NAN*
// The network will request TA
NetworkMethod = 3
// It is expected that the network will return the position
PositionOriginator = 2
expected_api_behaviour = 1

// The client information
// first client: session ID delay = 0, session step delay = 0, NPUDs = 2, interval = 5s, time out = 5s, max age = 0s, accept partial = true
$clientdetails,0,0,2,5000000,5000000,0,true*
// second client: session ID delay = 0, session step delay = 0, NPUDs = 3, interval = 8s, time out = 3s, max age = 0s, accept partial = false
$clientdetails,0,0,3,8000000,3000000,0,false*

[MOLR-ATA-EARLYCOMPLETE]
agps_module_update_file = c:\testdata\configs\lbs_molr_tracking.ini
$update,30,4,NAN,NAN,NAN,NAN,NAN*
// The network will request TA
NetworkMethod = 3
// It is expected that the network will return the position
PositionOriginator = 2
SpecialTestMode = 3
expected_api_behaviour = 1

// The client information
// first client: delay start until session 1:step 3 ,NPUDs = 2, interval = 0s (not tracking), time out = 5s, max age = 0s, accept partial = false
$clientdetails,1,3,2,0,5000000,0,false*
// second client: no delay (session 0:step0), NPUDs = 2, interval = 0s (not tracking), time out = 3s, max age = 0s, accept partial = false
$clientdetails,0,0,2,0,3000000,0,false*

[MOLR-ATA-LASTKNOWNPOSITION]
agps_module_update_file = c:\testdata\configs\lbs_molr_tracking.ini
$update,30,4,NAN,NAN,NAN,NAN,NAN*
// The network will request TA
NetworkMethod = 3
// It is expected that the network will return the position
PositionOriginator = 2
SpecialTestMode = 1
expected_api_behaviour = 1

// The client information
// first client: delay start until session 1:step 3 ,NPUDs = 3, interval = 0s (not tracking), time out = 5s, max age = 0s, accept partial = false
$clientdetails,1,3,3,0,5000000,0,false*
// second client: no delay (session 0:step0), NPUDs = 3, interval = 0s (not tracking), time out = 5s, max age = 0s, accept partial = false
$clientdetails,0,0,3,0,5000000,0,false*

[MOLR-ATA-MAXAGE]
agps_module_update_file = c:\testdata\configs\lbs_molr_tracking.ini
$update,30,4,NAN,NAN,NAN,NAN,NAN*
// The network will request TA
NetworkMethod = 3
// It is expected that the network will return the position
PositionOriginator = 2
SpecialTestMode = 2
expected_api_behaviour = 1

// The client information
// first client: delay start until session 1:step 3 ,NPUDs = 3, interval = 0s (not tracking), time out = 5s, max age = 100s, accept partial = false
$clientdetails,1,3,3,0,5000000,100000000,false*
// second client: no delay (session 0:step0), NPUDs = 3, interval = 0s (not tracking), time out = 3s, max age = 100s, accept partial = false
$clientdetails,0,0,3,0,3000000,100000000,false*

[MOLR-ATA-CANCEL-1]
agps_module_update_file = c:\testdata\configs\lbs_molr_tracking.ini
$update,30,4,NAN,NAN,NAN,NAN,NAN*
// The network will request TA
NetworkMethod = 3
// It is expected that the network will return the position
PositionOriginator = 2
expected_api_behaviour = 1
PositioningIndicator = 2

// The client information
// first client: session ID delay = 0, session step delay = 0, NPUDs = 2, interval = 5s, time out = 3s, max age = 0s, accept partial = false, cancel = true, cancel session ID = 2, cancel session step = 1
$clientdetails,0,0,2,5000000,3000000,0,false,cancel,2,1*
// second client: session ID delay = 0, session step delay = 0, NPUDs = 2, interval = 10s, time out = 5s, max age = 0s, accept partial = false, cancel = true, cancel session ID = 2, cancel session step = 1
$clientdetails,0,0,2,10000000,5000000,0,false,cancel,2,1*


[MOLR-ATA-CANCEL-2]
agps_module_update_file = c:\testdata\configs\lbs_molr_tracking.ini
$update,30,4,NAN,NAN,NAN,NAN,NAN*
// The network will request TA
NetworkMethod = 3
// It is expected that the network will return the position
PositionOriginator = 2
expected_api_behaviour = 1
PositioningIndicator = 2

// The client information
// first client: session ID delay = 0, session step delay = 0, NPUDs = 2, interval = 5s, time out = 3s, max age = 0s, accept partial = false, cancel = true, cancel session ID = 2, cancel session step = 1
$clientdetails,0,0,2,5000000,3000000,0,false,cancel,2,1*
// second client: session ID delay = 0, session step delay = 0, NPUDs = 3, interval = 5s, time out = 5s, max age = 0s, accept partial = false, cancel = true, cancel session ID = 3, cancel session step = 1
$clientdetails,0,0,3,5000000,5000000,0,false,cancel,3,1*

[MOLR-ATA-CANCEL-3]
agps_module_update_file = c:\testdata\configs\lbs_molr_tracking.ini
$update,30,4,NAN,NAN,NAN,NAN,NAN*
// The network will request TA
NetworkMethod = 3
// It is expected that the network will return the position
PositionOriginator = 2
expected_api_behaviour = 1
PositioningIndicator = 2

// The client information
// first client: session ID delay = 0, session step delay = 0, NPUDs = 2, interval = 5s, time out = 3s, max age = 0s, accept partial = false, cancel = true, cancel session ID = 2, cancel session step = 1
$clientdetails,0,0,2,5000000,3000000,0,false,cancel,2,1*
// second client: session ID delay = 0, session step delay = 0, NPUDs = 3, interval = 30s, time out = 5s, max age = 0s, accept partial = false, cancel = false
$clientdetails,0,0,3,5000000,5000000,0,false*

[MOLR-HYBRID-CANCEL-1]
agps_module_update_file = c:\testdata\configs\lbs_molr_tracking.ini
$update,30,4,3.5,2.8,500,10,10*
// The network will request TB+TA
NetworkMethod = 2
// It is expected that the module will return the position
PositionOriginator = 1
expected_api_behaviour = 1
PositioningIndicator = 2

// The client information
// first client: session ID delay = 0, session step delay = 0, NPUDs = 2, interval = 5s, time out = 3s, max age = 0s, accept partial = false, cancel = true, cancel session ID = 2, cancel session step = 1
$clientdetails,0,0,2,5000000,3000000,0,false,cancel,2,1*
// second client: session ID delay = 0, session step delay = 0, NPUDs = 2, interval = 30s, time out = 5s, max age = 0s, accept partial = false, cancel = true, cancel session ID = 2, cancel session step = 1
$clientdetails,0,0,2,10000000,5000000,0,false,cancel,2,1*


[MOLR-HYBRID-CANCEL-2]
agps_module_update_file = c:\testdata\configs\lbs_molr_tracking.ini
$update,30,4,3.5,2.8,500,10,10*
// The network will request TB+TA
NetworkMethod = 2
// It is expected that the module will return the position
PositionOriginator = 1
expected_api_behaviour = 1
PositioningIndicator = 2

// The client information
// first client: session ID delay = 0, session step delay = 0, NPUDs = 2, interval = 5s, time out = 3s, max age = 0s, accept partial = false, cancel = true, cancel session ID = 2, cancel session step = 1
$clientdetails,0,0,2,5000000,3000000,0,false,cancel,2,1*
// second client: session ID delay = 0, session step delay = 0, NPUDs = 2, interval = 30s, time out = 5s, max age = 0s, accept partial = false, cancel = true, cancel session ID = 2, cancel session step = 1
$clientdetails,0,0,2,10000000,5000000,0,false,cancel,2,2*


[MOLR-HYBRID-CANCEL-3]
agps_module_update_file = c:\testdata\configs\lbs_molr_tracking.ini
$update,30,4,3.5,2.8,500,10,10*
// The network will request TB+TA
NetworkMethod = 2
// It is expected that the module will return the position
PositionOriginator = 1
expected_api_behaviour = 1
PositioningIndicator = 2

// The client information
// first client: session ID delay = 0, session step delay = 0, NPUDs = 2, interval = 5s, time out = 3s, max age = 0s, accept partial = false, cancel = true, cancel session ID = 2, cancel session step = 1
$clientdetails,0,0,2,5000000,3000000,0,false,cancel,2,1*
// second client: session ID delay = 0, session step delay = 0, NPUDs = 2, interval = 30s, time out = 5s, max age = 0s, accept partial = false
$clientdetails,0,0,2,10000000,5000000,0,false*


[MOLR-Auto-TB-TRACKING-2CLIENTS-1]
agps_module_update_file = c:\testdata\configs\lbs_molr_tracking.ini
expected_api_behaviour = 1
$update,30,4,3.5,2.8,500,10,10*
// The network will request TB (for the non-autonomous session)
NetworkMethod = 1
// It is expected that the module will return the position
PositionOriginator = 1
// The module should be set to Autonomous then PTB and then not set again
// Auto
$modulemodes,3*
// PTB
$modulemodes,1*
PositioningIndicator = 2


// The client information
// first client: session ID delay = 0, session step delay = 0, NPUDs = 2, interval = 5s, time out = 3s, max age = 0s, accept partial = false, cancel = false(, cancel session id = 0, cancel step id = 0), psy uid = gps module
$clientdetails,0,0,2,5000000,3000000,0,false,false,0,0,270526858*
// second client: session ID delay = 1, session step delay = 0, NPUDs = 4, interval = 9s, time out = 3s, max age = 0s, accept partial = false, cancel = false(, cancel session id = 0, cancel step id = 0), psy uid = agps module
$clientdetails,1,0,4,9000000,3000000,0,false,false,0,0,270526860*




[MOLR-TB-Auto-TRACKING-2CLIENTS-1]
agps_module_update_file = c:\testdata\configs\lbs_molr_tracking.ini
expected_api_behaviour = 1
$update,30,4,3.5,2.8,500,10,10*
// The network will request TB (for the non-autonomous session)
NetworkMethod = 1
// It is expected that the module will return the position
PositionOriginator = 1
// The module should be set to PTB and then Autonomous then not set again
// PTB
$modulemodes,1*
// Auto
$modulemodes,3*
PositioningIndicator = 2

// The client information
// first client: session ID delay = 0, session step delay = 0, NPUDs = 5, interval = 5s, time out = 3s, max age = 0s, accept partial = false, cancel = false(, cancel session id = 0, cancel step id = 0), psy uid = agps module
$clientdetails,0,0,2,5000000,3000000,0,false,false,0,0,270526860*
// second client: session ID delay = 1, session step delay = 0, NPUDs = 6, interval = 10s, time out = 3s, max age = 0s, accept partial = false, cancel = false(, cancel session id = 0, cancel step id = 0), psy uid = gps module
$clientdetails,1,0,2,10000000,3000000,0,false,false,0,0,270526858*


[MOLR-TA-Auto-TRACKING-2CLIENTS-1]
agps_module_update_file = c:\testdata\configs\lbs_molr_tracking.ini
expected_api_behaviour = 1
// module will return 3 sets of measurements
$update,3,0,NAN,NAN,NAN,NAN,NAN*	
// The network will request TA 
NetworkMethod = 3
// It is expected that the network will return the position 
PositionOriginator = 2
// The module should be set to ATA and then not set again
// ATA
$modulemodes,5*
PositioningIndicator = 2


// The client information
// first client: session ID delay = 0, session step delay = 0, NPUDs = 3, interval = 5s, time out = 3s, max age = 0s, accept partial = false, cancel = false(, cancel session id = 0, cancel step id = 0), psy uid = agps module
$clientdetails,0,0,3,5000000,3000000,0,false,false,0,0,270526860*
// second client: session ID delay = 1, session step delay = 0, NPUDs = 1, interval = 5s, time out = 3s, max age = 0s, accept partial = false, cancel = false(, cancel session id = 0, cancel step id = 0), psy uid = gps module, expected error = KErrInUse
$clientdetails,1,0,1,5000000,3000000,0,false,false,0,0,270526858,-14*

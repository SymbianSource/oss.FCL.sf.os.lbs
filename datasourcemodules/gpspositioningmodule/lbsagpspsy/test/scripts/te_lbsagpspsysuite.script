// Copyright (c) 2008-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
// The script for the Lbs AGPS PSY Test Suite
// 
//

//! @File
//! @SYMTestSuiteName         LBS-AgpsPsySuite
//! @SYMScriptTestEnvironment TestExecute using te_lbsagpspsysuite.script

//The quality profile and the internalapi buses are directly initialized from the test
//without starting lbsroot [so lbsprofile.ini & agpsintegmodule.ini have to be copied to the private folder of the test process]
PREFIX RUN_UTILS
MkDir c:\private\10285acb
MkDir c:\private\10285acb\lbs
MkDir c:\private\10285acb\lbs\locmods
DeleteFile c:\private\10285acb\lbs\lbsprofile.ini
DeleteFile c:\private\10285acb\lbs\locmods\agpsintegmodule.ini
CopyFile c:\testdata\configs\te_lbsagpspsy_lbsprofile.ini c:\private\10285acb\lbs\lbsprofile.ini
CopyFile c:\testdata\configs\te_lbsagpspsy_agpsintegmodule.ini c:\private\10285acb\lbs\locmods\agpsintegmodule.ini
REMOVE_PREFIX

LOAD_SUITE te_lbsagpspsysuite

PRINT RUN ALL te_lbsagpspsysuite TESTS


START_TESTCASE                	LBS-AgpsPsySuite-NotifyPositionUpdate-Section0
//! @SYMTestCaseID              LBS-AgpsPsySuite-NotifyPositionUpdate-Section0
//! @SYMTestCaseDesc            Runs several pos update scenarios, which completes normally.
//! @SYMTestActions             SIMPLE POSITION UPDATE
//!				1. Create the positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD.
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue.
//!				6. Create and issue the simple pos update.
//!				7. Start the active scheduler for some time.
//!				8. Check the pos update	is received and equal to the sent one.
//!
//!				TWO SIMPLE POSITION UPDATES
//!				9. Create the second positioner.
//!				10. The update request listener starts listening. 
//!				11. The first positioner issues NPUD.
//!				12. Start the active scheduler for some time.
//!				13. Check that default update request is received.
//!				14. The second positioner issues NPUD.
//!				15. Start the active scheduler for some time.
//!				16. Check that no new update request is received.
//!				17. Create and issue the simple pos update.
//!				18. Start the active scheduler for some time.
//!				19. Check the pos update is received and equal to the sent one for both positioners.
//!				20. Delete the second positioner.
//!				
//!				CANCEL A POSITION UPDATE
//!				21. The update request listener starts listening.
//!				22. The positioner issues NPUD.
//!				23. Start the active scheduler for some time.
//!				24. Check that default update request is received.
//!				25. The positioner cancels the NPUD.
//!				26. Start the active scheduler for some time.
//!				27. Check that a cancel update request is received.
//!				28. Check that the positioner NPUD is completed with KErrCancel.
//!				29. Create and issue the simple pos update.
//!			
//!				PARTIAL UPDATE
//!				30. Set the positioner to accept partial updates.
//!				31. Set the update timeout to KWarmDownInterval.
//!				32. The update request listener starts listening.
//!				33. The positioner issues NPUD.
//!				34. Start the active scheduler for some time.
//!				35. Check that the update request is received with the timeout set to KWarmDownInterval.
//!				36. Create and issue the partial pos update.
//!				37. Start the active scheduler for some time.
//!				38. Check the pos update is received and equal to the sent one.
//!				39. Start the active scheduler wait forKWarmDownInterval to make warm down timer working.
//!				
//!				TEST METHODS WHICH ARE NEVER CALLED IN THE PRODUCTION CODE
//!				40. Simulate the timer errors.  
//!
//!				CLEANUP
//!				41. Delete the positioner and update request listener.
//!
//!				AGPS PSY SPECIFIC TESTS
//!				POSITION UPDATE WITH REF POS
//!				42. Create the positioner and update request listener.
//!				43. The update request listener starts listening. 
//!				44. The positioner issues NPUD.
//!				45. Start the active scheduler for some time.
//!				46. Check that default update request is received with newClient flag set to ETrue.
//!				47. The update request listener starts listening. 
//!				48. Create and issue the ref pos update.
//!				49. Start the active scheduler for some time.
//!				50. Check the pos update is received and equal to the sent one.
//!				51. Check that an update request is not received.
//!				52. The positioner issues NPUD.
//!				53. Create and issue the simple pos update.
//!				54. Start the active scheduler for some time.
//!				55. Check that default update request is received.
//!				56. Check the pos update is received and equal to the sent one.
//!
//!				SETTING MAXAGE AND USING CACHED REF POS UPDATE				
//!				57. Set the MaxAge for the positioner to some time ago.
//!				58. The update request listener starts listening. 
//!				59. The positioner issues NPUD.
//!				60. Start the active scheduler for some time.
//!				61. Check the cached ref pos update is received and equal to the sent one.
//!				62. Check that an update request is not received.
//!				63. Cancel listening for the update requests.
//!				64. Restore the MaxAge to 0.
//!
//!				POSITION UPDATE WITH REF POS & FINAL NET POS
//!				65. The update request listener starts listening. 
//!				66. The positioner issues NPUD.
//!				67. Start the active scheduler for some time.
//!				68. Check that default update request is received.
//!				69. The update request listener continues listening. 
//!				70. Create and issue the ref pos update.
//!				71. Start the active scheduler for some time.
//!				72. Check the pos update is received and equal to the sent one.
//!				73. Check that an update request is not received.
//!				74. The positioner issues NPUD.
//!				75. Create and issue the FNP update.
//!				76. Start the active scheduler for some time.
//!				77. Check that a cancel update request is received.
//!				78. Check the pos update is received and equal to the sent one.
//!
//!				SETTING MAXAGE AND USING CACHED FN POS UPDATE
//!				79. Set the MaxAge for the positioner to some time ago.				
//!				80. The update request listener starts listening.
//!				81. The positioner issues NPUD.
//!				82. Start the active scheduler for some time.
//!				83. Check the cached FNP update is received and equal to the sent one.
//!				84. Check that an update request is not received.
//!				85. Cancel listening for the update requests.
//!				86. Restore the MaxAge to 0.
//!
//!				CLEANUP
//!				87. Delete the positioner and update request listener.
//!
//!
//!
//! @SYMTestExpectedResults     The expected pos update requests and pos updates are received.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 11248, REQ 11250, REQ 11253, REQ 11255, REQ 11256, REQ 11257, REQ 11472, REQ 11475, REQ 11478, REQ 11479, REQ 11480, REQ 11481, REQ 11482, REQ 8827, REQ 8828, REQ 8831
//! @SYMCreationDate            20/10/2008
//! @SYMAuthor                  NicolayB
RUN_TEST_STEP 100 te_lbsagpspsysuite NotifyPositionUpdate c:\testdata\configs\te_lbsagpspsy.ini Section0
END_TESTCASE                  	LBS-AgpsPsySuite-NotifyPositionUpdate-Section0


START_TESTCASE                	LBS-AgpsPsySuite-NotifyPositionUpdateTiming-Section0
//! @SYMTestCaseID              LBS-AgpsPsySuite-NotifyPositionUpdateTiming-Section0
//! @SYMTestCaseDesc            Runs several pos update scenarios with the accent on the timing issues.
//! @SYMTestActions             HANDLING THE OLD POSITION UPDATE
//!				1. Create the positioner and update request listener. 
//!				2. The update request listener starts listening. 
//!				3. The positioner issues NPUD.
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue.
//!				6. Create and issue the pos update with the actual time < target time.
//!				7. Check that no position update is received by the positioner.
//!				8. The update request listener starts listening. 
//!				9. The positioner cancels the request.
//!				10. Start the active scheduler for some time.
//!				11. Check that a cancel request is received.
//!
//!				SETTING MAXAGE AND USING CACHED UPDATE
//!				12. Set the MaxAge for the positioner to some time ago.				
//!				13. The update request listener starts listening.
//!				14. The positioner issues NPUD.
//!				15. Start the active scheduler for some time.
//!				16. Check the cached FNP update is received and equal to the sent one.
//!				17. Check that an update request is not received.
//!				18. Cancel listening for the update requests.
//!				19. Restore the MaxAge to 0.
//!
//!				SETTING MAXAGE, NO CACHED UPDATE
//!				20. Set the MaxAge for the positioner to now.				
//!				21. The update request listener starts listening.
//!				22. The positioner issues NPUD.
//!				23. Start the active scheduler for some time.
//!				24. Check that default update request is received.
//!				25. Create and issue the simple pos update.
//!				26. Start the active scheduler for some time.
//!				27. Check the pos update is received and equal to the sent one.
//!				28. Restore the MaxAge to 0.
//!
//!				SIMPLE TRACKING SCENARIO
//!				29. Check that the tracking flag overriden.
//!				30. The positioner starts tracking.
//!				31. Start the active scheduler for some time.
//!				32. The positioner issues NPUD.
//!				33. Start the active scheduler for some time.
//!				34. Create and issue the simple pos update.
//!				35. Start the active scheduler for some time.
//!				36. Check the pos update is received and equal to the sent one.
//!				37. The positioner stops tracking.
//!
//!				TRACKING SCENARIO WITH LATE REQUEST
//!				38. The positioner starts tracking.
//!				39. Start the active scheduler for some time.
//!				40. The positioner issues NPUD.
//!				41. Start the active scheduler for some time.
//!				42. Create and issue the simple pos update.
//!				43. Start the active scheduler for some time.
//!				44. Check the pos update is received and equal to the sent one.
//!				45. Start the active scheduler for some time.
//!				46. The positioner issues NPUD.
//!				47. Start the active scheduler for some time.
//!				48. Create and issue the simple pos update.
//!				49. Start the active scheduler for some time.
//!				50. Check the pos update is received and equal to the sent one.
//!				51. The positioner stops tracking.
//!
//!				CLEANUP
//!				52. Delete the positioner and update request listener.				
//!
//!
//! @SYMTestExpectedResults     The expected pos update requests and pos updates are received.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 11248, REQ 11249, REQ 11253, REQ 11254, REQ 11255, REQ 11475, REQ 11476, REQ 11477, REQ 11482, REQ 8827, REQ 8828, REQ 8829 
//! @SYMCreationDate            20/10/2008
//! @SYMAuthor                  NicolayB
RUN_TEST_STEP 100 te_lbsagpspsysuite NotifyPositionUpdateTiming c:\testdata\configs\te_lbsagpspsy.ini Section0
END_TESTCASE                  	LBS-AgpsPsySuite-NotifyPositionUpdateTiming-Section0


START_TESTCASE                	LBS-AgpsPsySuite-NotifyPositionUpdateErr-Section0
//! @SYMTestCaseID              LBS-AgpsPsySuite-NotifyPositionUpdateErr-Section0
//! @SYMTestCaseDesc            Runs several pos update scenarios with errors.
//! @SYMTestActions             SIMPLE POSITION UPDATE ERROR
//!				1. Create the positioner and update request listener. 
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD.
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue.
//!				6. Create and issue the error pos update.
//!				7. Start the active scheduler for some time.
//!				8. Check the pos update	error is received and equal to the sent one.
//!
//!				CPOSITIONER CREATION/DESTRUCTION WITH MEMORY LEAKS
//!				9. Inject the heap error for the Nth(N==0 first) memory allocation.
//!				10. Try to create the positioner and then delete it.
//!				11. Check wheter a memory allocation fails during the positioner creation.
//!				12. If alloc failure occured outside the factory method, stop the test.
//!				13. If alloc failure occured inside the factory method and no leave occured, the positioner must be created.
//!				14. Increment N and go to step 16.
//!
//!				SIMPLE POSITION UPDATE WITH OOM WHILE CALLING NotifyPositionUpdate
//!				15. The update request listener starts listening.
//!				16. Inject the heap error for the Nth(N==0 first) memory allocation.
//!				17. The positioner issues NPUD.
//!				18. Check wheter a memory allocation fails during the positioner creation.
//!				19. Start the active scheduler for some time.
//!				20. If alloc failure occured outside the NPUD, stop the test.
//!				21. If the pos update request is received, check that the pos update is received.
//!				22. If the pos update request is not received, check that the pos update is not received.
//!
//!				CLEANUP
//!				23. Delete the positioner and update request listener.		
//!
//!				AGPS PSY SPECIFIC TESTS:
//!				POSITION UPDATE FUTILE ERROR - AUTONOMOUS MODE
//!				24. The update request listener starts listening. 
//!				25. The positioner issues NPUD.
//!				26. Start the active scheduler for some time.
//!				27. Check that default update request is received.
//!				28. Create and issue the futile error pos update.
//!				29. Start the active scheduler for some time.
//!				30. Check the pos update error KPositionQualityLoss is received.
//!
//! @SYMTestExpectedResults     The errors are handled correctly and the methods fail with the appropriate err codes.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 11248, REQ 11475, REQ 11482, REQ 8827, REQ 8828
//! @SYMCreationDate            21/10/2008
//! @SYMAuthor                  NicolayB
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateErr c:\testdata\configs\te_lbsagpspsy.ini Section0
END_TESTCASE                  	LBS-AgpsPsySuite-NotifyPositionUpdateErr-Section0

START_TESTCASE                	LBS-AgpsPsySuite-ModuleInfo-Section0
//! @SYMTestCaseID              LBS-AgpsPsySuite-ModuleInfo-Section0
//! @SYMTestCaseDesc            Runs the scenarios where the module info is get.
//! @SYMTestActions             1. Create the positioner and assign the positioner, which will receive the notifications.
//!				2. Issue the module status updates.
//!				3. Check that the information is received by the positioner.
//!				4. Repeat 2-3 with various sets of parameters.
//!
//!
//! @SYMTestExpectedResults     The expected module info updates are received.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 11260, REQ 11261, REQ 11270, REQ 11275, REQ 11482, REQ 8827, REQ 8832, REQ 8833
//! @SYMCreationDate            21/10/2008
//! @SYMAuthor                  NicolayB
RUN_TEST_STEP 100 te_lbsagpspsysuite ModuleInfo c:\testdata\configs\te_lbsagpspsy.ini Section0
END_TESTCASE                  	LBS-AgpsPsySuite-ModuleInfo-Section0


START_TESTCASE                	LBS-AgpsPsySuite-NotifyPositionUpdate-Section1
//! @SYMTestCaseID              LBS-AgpsPsySuite-NotifyPositionUpdate-Section1
//! @SYMTestCaseDesc            Runs several pos update scenarios, which completes normally.
//! @SYMTestActions             See LBS-AgpsPsySuite-NotifyPositionUpdate-Section0 actions.
//! @SYMTestExpectedResults     The expected pos update requests and pos updates are received.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 11248, REQ 11250, REQ 11253, REQ 11255, REQ 11256, REQ 11257, REQ 11472, REQ 11475, REQ 11478, REQ 11479, REQ 11480, REQ 11481, REQ 11482, REQ 8827, REQ 8828, REQ 8831
//! @SYMCreationDate            21/10/2008
//! @SYMAuthor                  NicolayB
RUN_TEST_STEP 100 te_lbsagpspsysuite NotifyPositionUpdate c:\testdata\configs\te_lbsagpspsy.ini Section1
END_TESTCASE                  	LBS-AgpsPsySuite-NotifyPositionUpdate-Section1



START_TESTCASE                	LBS-AgpsPsySuite-NotifyPositionUpdateTiming-Section1
//! @SYMTestCaseID              LBS-AgpsPsySuite-NotifyPositionUpdateTiming-Section1
//! @SYMTestCaseDesc            Runs several pos update scenarios with the accent on the timing issues.
//! @SYMTestActions             See LBS-AgpsPsySuite-NotifyPositionUpdateTiming-Section0 actions.
//! @SYMTestExpectedResults     The expected pos update requests and pos updates are received.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 11248, REQ 11249, REQ 11253, REQ 11254, REQ 11255, REQ 11475, REQ 11476, REQ 11477, REQ 11482, REQ 8827, REQ 8828, REQ 8829 
//! @SYMCreationDate            21/10/2008
//! @SYMAuthor                  NicolayB
RUN_TEST_STEP 100 te_lbsagpspsysuite NotifyPositionUpdateTiming c:\testdata\configs\te_lbsagpspsy.ini Section1
END_TESTCASE                  	LBS-AgpsPsySuite-NotifyPositionUpdateTiming-Section1


START_TESTCASE                	LBS-AgpsPsySuite-NotifyPositionUpdateErr-Section1
//! @SYMTestCaseID              LBS-AgpsPsySuite-NotifyPositionUpdateErr-Section1
//! @SYMTestCaseDesc            Runs several pos update scenarios with errors.
//! @SYMTestActions             See LBS-AgpsPsySuite-NotifyPositionUpdateErr-Section0 actions.
//! @SYMTestExpectedResults     The errors are handled correctly and the methods fail with the appropriate err codes.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 11248, REQ 11475, REQ 11482, REQ 8827, REQ 8828
//! @SYMCreationDate            21/10/2008
//! @SYMAuthor                  NicolayB
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateErr c:\testdata\configs\te_lbsagpspsy.ini Section1
END_TESTCASE                  	LBS-AgpsPsySuite-NotifyPositionUpdateErr-Section1



START_TESTCASE                	LBS-AgpsPsySuite-ModuleInfo-Section1
//! @SYMTestCaseID              LBS-AgpsPsySuite-ModuleInfo-Section1
//! @SYMTestCaseDesc            Runs the scenarios where the module info is get.
//! @SYMTestActions             See the LBS-AgpsPsySuite-ModuleInfo-Section0 actions.
//! @SYMTestExpectedResults     The expected module info updates are received.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 11260, REQ 11261, REQ 11270, REQ 11275, REQ 11482, REQ 8827, REQ 8832, REQ 8833
//! @SYMCreationDate            21/10/2008
//! @SYMAuthor                  NicolayB
RUN_TEST_STEP 100 te_lbsagpspsysuite ModuleInfo c:\testdata\configs\te_lbsagpspsy.ini Section1
END_TESTCASE                  	LBS-AgpsPsySuite-ModuleInfo-Section1


START_TESTCASE                	LBS-AgpsPsySuite-NotifyPositionUpdate-Section2
//! @SYMTestCaseID              LBS-AgpsPsySuite-NotifyPositionUpdate-Section2
//! @SYMTestCaseDesc            Runs several pos update scenarios, which completes normally.
//! @SYMTestActions             See LBS-AgpsPsySuite-NotifyPositionUpdate-Section0 actions.
//! @SYMTestExpectedResults     The expected pos update requests and pos updates are received.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 11248, REQ 11250, REQ 11253, REQ 11255, REQ 11256, REQ 11257, REQ 11472, REQ 11475, REQ 11478, REQ 11479, REQ 11480, REQ 11481, REQ 11482, REQ 8827, REQ 8828, REQ 8831
//! @SYMCreationDate            21/10/2008
//! @SYMAuthor                  NicolayB
RUN_TEST_STEP 100 te_lbsagpspsysuite NotifyPositionUpdate c:\testdata\configs\te_lbsagpspsy.ini Section2
END_TESTCASE                  	LBS-AgpsPsySuite-NotifyPositionUpdate-Section2



START_TESTCASE                	LBS-AgpsPsySuite-NotifyPositionUpdateTiming-Section2
//! @SYMTestCaseID              LBS-AgpsPsySuite-NotifyPositionUpdateTiming-Section2
//! @SYMTestCaseDesc            Runs several pos update scenarios with the accent on the timing issues.
//! @SYMTestActions             See LBS-AgpsPsySuite-NotifyPositionUpdateTiming-Section0 actions.
//! @SYMTestExpectedResults     The expected pos update requests and pos updates are received.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 11248, REQ 11249, REQ 11253, REQ 11254, REQ 11255, REQ 11475, REQ 11476, REQ 11477, REQ 11482, REQ 8827, REQ 8828, REQ 8829 
//! @SYMCreationDate            21/10/2008
//! @SYMAuthor                  NicolayB
RUN_TEST_STEP 100 te_lbsagpspsysuite NotifyPositionUpdateTiming c:\testdata\configs\te_lbsagpspsy.ini Section2
END_TESTCASE                  	LBS-AgpsPsySuite-NotifyPositionUpdateTiming-Section2


START_TESTCASE                	LBS-AgpsPsySuite-NotifyPositionUpdateErr-Section2
//! @SYMTestCaseID              LBS-AgpsPsySuite-NotifyPositionUpdateErr-Section2
//! @SYMTestCaseDesc            Runs several pos update scenarios with errors.
//! @SYMTestActions             See LBS-AgpsPsySuite-NotifyPositionUpdateErr-Section0 actions.
//! @SYMTestExpectedResults     The errors are handled correctly and the methods fail with the appropriate err codes.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 11248, REQ 11475, REQ 11482, REQ 8827, REQ 8828
//! @SYMCreationDate            21/10/2008
//! @SYMAuthor                  NicolayB
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateErr c:\testdata\configs\te_lbsagpspsy.ini Section2
END_TESTCASE                  	LBS-AgpsPsySuite-NotifyPositionUpdateErr-Section2



START_TESTCASE                	LBS-AgpsPsySuite-NotifyPositionUpdate-Section3
//! @SYMTestCaseID              LBS-AgpsPsySuite-NotifyPositionUpdate-Section3
//! @SYMTestCaseDesc            Runs several pos update scenarios, which completes normally.
//! @SYMTestActions             See LBS-AgpsPsySuite-NotifyPositionUpdate-Section0 actions.
//! @SYMTestExpectedResults     The expected pos update requests and pos updates are received.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 11248, REQ 11250, REQ 11253, REQ 11255, REQ 11256, REQ 11257, REQ 11472, REQ 11475, REQ 11478, REQ 11479, REQ 11480, REQ 11481, REQ 11482, REQ 8827, REQ 8828, REQ 8831
//! @SYMCreationDate            21/10/2008
//! @SYMAuthor                  NicolayB
RUN_TEST_STEP 100 te_lbsagpspsysuite NotifyPositionUpdate c:\testdata\configs\te_lbsagpspsy.ini Section3
END_TESTCASE                  	LBS-AgpsPsySuite-NotifyPositionUpdate-Section3



START_TESTCASE                	LBS-AgpsPsySuite-NotifyPositionUpdateTiming-Section3
//! @SYMTestCaseID              LBS-AgpsPsySuite-NotifyPositionUpdateTiming-Section3
//! @SYMTestCaseDesc            Runs several pos update scenarios with the accent on the timing issues.
//! @SYMTestActions             See LBS-AgpsPsySuite-NotifyPositionUpdateTiming-Section0 actions.
//! @SYMTestExpectedResults     The expected pos update requests and pos updates are received.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 11248, REQ 11249, REQ 11253, REQ 11254, REQ 11255, REQ 11475, REQ 11476, REQ 11477, REQ 11482, REQ 8827, REQ 8828, REQ 8829, REQ 11262

//! @SYMCreationDate            21/10/2008
//! @SYMAuthor                  NicolayB
RUN_TEST_STEP 100 te_lbsagpspsysuite NotifyPositionUpdateTiming c:\testdata\configs\te_lbsagpspsy.ini Section3
END_TESTCASE                  	LBS-AgpsPsySuite-NotifyPositionUpdateTiming-Section3


START_TESTCASE                	LBS-AgpsPsySuite-NotifyPositionUpdateErr-Section3
//! @SYMTestCaseID              LBS-AgpsPsySuite-NotifyPositionUpdateErr-Section3
//! @SYMTestCaseDesc            Runs several pos update scenarios with errors.
//! @SYMTestActions             See LBS-AgpsPsySuite-NotifyPositionUpdateErr-Section0 actions.
//! @SYMTestExpectedResults     The errors are handled correctly and the methods fail with the appropriate err codes.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 11248, REQ 11475, REQ 11482, REQ 8827, REQ 8828
//! @SYMCreationDate            21/10/2008
//! @SYMAuthor                  NicolayB
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateErr c:\testdata\configs\te_lbsagpspsy.ini Section3
END_TESTCASE                  	LBS-AgpsPsySuite-NotifyPositionUpdateErr-Section3


START_TESTCASE                	LBS-AgpsPsySuite-PowerAdvice-Section0
//! @SYMTestCaseID              LBS-AgpsPsySuite-PowerAdvice-Section0
//! @SYMTestCaseDesc            Simple NPUD and verify that power advice 'standby' received after inactivity period.
//! @SYMTestActions             .
//! @SYMTestExpectedResults     .
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ 11475, REQ 11659, REQ 11660
//! @SYMCreationDate            27/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite PowerAdvice c:\testdata\configs\te_lbsagpspsy.ini Section0
END_TESTCASE                  	LBS-AgpsPsySuite-PowerAdvice-Section0


//------------------------------- Device Caps TB ONLY

// Set up the device caps (lbs is restarted by test case so caps are re-parsed):
RUN_UTILS CopyFile c:\testdata\configs\te_lbsagpspsy_devicecaps_TB.ini  c:\private\10285acb\lbs\locmods\agpsintegmodule.ini

START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-0-A
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-0-A
//! @SYMTestCaseDesc            Verify correct merging of requests (single autonomous request)
//! @SYMTestActions             1. Create gps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD.
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to autonomous.
//!				6. Create and issue the simple pos update.
//!				7. Start the active scheduler for some time.
//!				8. Check the pos update	is received and equal to the sent one.
//! @SYMTestExpectedResults     single update request received with mode set to autonomous. NPUD completes normally
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248,REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481, REQ 11649, REQ 11651, REQ 11657
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTB-0-A
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-0-A

START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-A-A
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-A-A
//! @SYMTestCaseDesc            Verify correct merging of requests (2 autonomous requests)
//! @SYMTestActions             1. Create gps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = Autonomous).
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to autonomous.
//!				6. Create a second gps positioner 
//!				7. Second positioner issues NPUD (mode = autonomous)
//!				8. Check that another update request is not received
//!				9. Create and issue the simple pos update.
//!				10. Start the active scheduler for some time.
//!				11. Check the pos update is received by both positioners and equal to the sent one.
//! @SYMTestExpectedResults     single update request received with mode set to autonomous. Both NPUDs complete normally.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248,REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481, REQ 11649, REQ 11656, REQ 11657
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTB-A-A
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-A-A

START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-0-TB
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-0-TB
//! @SYMTestCaseDesc            Verify correct merging of requests (single TB)
//! @SYMTestActions             1. Create agps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TB).
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to TB.
//!				6. Create and issue the simple pos update.
//!				7. Start the active scheduler for some time.
//!				8. Check the pos update is received by the positioner and equal to the sent one.
//! @SYMTestExpectedResults     single update request received with mode set to TB. NPUD completes normally.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248,REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481, REQ 11657
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTB-0-TB
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-0-TB


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-A-TB
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-A-TB
//! @SYMTestCaseDesc            Verify correct merging of requests (autonomous then TB)
//! @SYMTestActions             1. Create gps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = Autonomous).
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to autonomous.
//!				6. Create a second gps positioner 
//!				7. Second positioner issues NPUD (mode = TB)
//!				8. Check that default update request is received with newClient flag set to ETrue and mode set to TB.
//!				9. Create and issue the simple pos update.
//!				10. Start the active scheduler for some time.
//!				11. Check the pos update is received by both positioners and equal to the sent one.
//! @SYMTestExpectedResults     2 update requests received with mode set to autonomous then TB. Both NPUDs complete normally
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248,REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481, REQ 11649, REQ 11651, REQ 11656, REQ 11657
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTB-A-TB
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-A-TB


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-0-TA
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-0-TA
//! @SYMTestCaseDesc            Verify correct merging of requests (single TA request)
//! @SYMTestActions             1. Create agps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TA).
//!				4. Check that the update request fails with KErrCorrupt
//!				5. Start the active scheduler for some time.
//!				6. Check that an update request is not received
//! @SYMTestExpectedResults     No update requests received and NPUD completes with KErrCorrupt
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248,REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481, REQ 11657
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTB-0-TA
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-0-TA


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-A-TA
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-A-TA
//! @SYMTestCaseDesc            Verify correct merging of requests (autonomous then TA )
//! @SYMTestActions             1. Create gps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = autonomous).
//!				4. Check that default update request is received with newClient flag set to ETrue and mode set to Autonomous.
//!				6. Create a second agps positioner 
//!				7. Second positioner issues NPUD (mode = TA)
//!				8. Check that the update request fails with KErrCorrupt
//!				9. Start the active scheduler for some time.
//!				10. Check that another update request is not received
//! @SYMTestExpectedResults     Single update requests received with mode autonomous, first NPUD completes normally second NPUD completes with KErrCorrupt
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248,REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481, REQ 11649, REQ 11651, REQ 11652, REQ 11657
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTB-A-TA
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-A-TA


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-TB-A
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-TB-A
//! @SYMTestCaseDesc            Verify correct merging of requests (TB then autonomous)
//! @SYMTestActions             1. Create agps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TB).
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to TB.
//!				6. Create a second gps positioner 
//!				7. Second positioner issues NPUD (mode = Autononmous)
//!				8. Check that another update request is not received
//!				9. Create and issue the simple pos update.
//!				10. Start the active scheduler for some time.
//!				11. Check the pos update is received by both positioners and equal to the sent one.
//! @SYMTestExpectedResults     single update requests received with mode set to TB. Both NPUDs complete normally
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248,REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481, REQ 11649, REQ 11651, REQ 11657
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTB-TB-A
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-TB-A

START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-TB-TB
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-TB-TB
//! @SYMTestCaseDesc            Verify correct merging of requests (2 TB requests)
//! @SYMTestActions             1. Create gps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TB).
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to TB.
//!				6. Create a second gps positioner 
//!				7. Second positioner issues NPUD (mode = TB)
//!				8. Check that another update request is not received
//!				9. Create and issue the simple pos update.
//!				10. Start the active scheduler for some time.
//!				11. Check the pos update is received by both positioners and equal to the sent one.
//! @SYMTestExpectedResults     single update request received with mode set to TB. Both NPUDs complete normally.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTB-TB-TB
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-TB-TB

START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-TB-TA
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-TB-TA
//! @SYMTestCaseDesc            Verify correct merging of requests (TB then TA)
//! @SYMTestActions             1. Create agps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TB).
//!				4. Check that default update request is received with newClient flag set to ETrue and mode set to TB.
//!				6. Create a second gps positioner 
//!				7. Second positioner issues NPUD (mode = TA)
//!				8. Check that the update request fails with KErrInUse
//!				9. Start the active scheduler for some time.
//!				10. Check that another update request is not received
//! @SYMTestExpectedResults     Single update requests received with mode TB, first NPUD completes normally second NPUD completes with KErrInUse
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248,REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTB-TB-TA
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTB-TB-TA



//------------------------------- Device Caps TA

RUN_UTILS CopyFile c:\testdata\configs\te_lbsagpspsy_devicecaps_ta.ini  c:\private\10285acb\lbs\locmods\agpsintegmodule.ini

START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTA-0-A
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTA-0-A
//! @SYMTestCaseDesc            Verify correct merging of requests (single Autonomous request)
//! @SYMTestActions             1. Create gps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = autonomous).
//!				4. Check that the update request fails with KErrCorrupt
//!				5. Start the active scheduler for some time.
//!				6. Check that an update request is not received
//! @SYMTestExpectedResults     No update requests received and NPUD completes with KErrCorrupt
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ 11252, REQ 11475, REQ 11480, REQ 11481, REQ 11649, REQ 11657
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTA-0-A
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTA-0-A


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTA-TA-A
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTA-TA-A
//! @SYMTestCaseDesc            Verify correct merging of requests (TA then autonomous)
//! @SYMTestActions             1. Create agps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TA).
//!				4. Check that default update request is received with newClient flag set to ETrue and mode set to TA.
//!				6. Create a second gps positioner 
//!				7. Second positioner issues NPUD (mode = autonomous)
//!				8. Check that the update request fails with KErrCorrupt
//!				9. Start the active scheduler for some time.
//!				10. Check that another update request is not received
//! @SYMTestExpectedResults     Single update requests received with mode TA, first NPUD completes normally second NPUD completes with KErrCorrupt
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248,REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481, REQ 11649, REQ 11652, REQ 11657
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTA-TA-A
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTA-TA-A


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTA-0-TB
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTA-0-TB
//! @SYMTestCaseDesc            Verify correct merging of requests (single TB request)
//! @SYMTestActions             1. Create agps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TB).
//!				4. Check that the update request fails with KErrCorrupt
//!				5. Start the active scheduler for some time.
//!				6. Check that an update request is not received
//! @SYMTestExpectedResults     No update requests received and NPUD completes with KErrCorrupt
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ 11252, REQ 11475, REQ 11480, REQ 11481, 
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTA-0-TB
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTA-0-TB

START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTA-TA-TB
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTA-TA-TB
//! @SYMTestCaseDesc            Verify correct merging of requests (TA then TB)
//! @SYMTestActions             1. Create agps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TA).
//!				4. Check that default update request is received with newClient flag set to ETrue and mode set to TA.
//!				6. Create a second gps positioner 
//!				7. Second positioner issues NPUD (mode = TB)
//!				8. Check that the update request fails with KErrInUse
//!				9. Start the active scheduler for some time.
//!				10. Check that another update request is not received
//! @SYMTestExpectedResults     Single update requests received with mode TA, first NPUD completes normally second NPUD completes with KErrInUse
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTA-TA-TB
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTA-TA-TB


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTA-0-TA
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTA-0-TA
//! @SYMTestCaseDesc            Verify correct merging of requests (single TA request)
//! @SYMTestActions             1. Create gps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD.
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to TA.
//!				6. Create and issue the simple pos update.
//!				7. Start the active scheduler for some time.
//!				8. Check the pos update	is received and equal to the sent one.
//! @SYMTestExpectedResults     single update request received with mode set to TA. NPUD completes normally
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ 11252, REQ 11475, REQ 11480, REQ 11481
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTA-0-TA
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTA-0-TA


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTA-TA-TA
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTA-TA-TA
//! @SYMTestCaseDesc            Verify correct merging of requests (2 TA requests)
//! @SYMTestActions             1. Create agps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TA).
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to TA.
//!				6. Create a second agps positioner 
//!				7. Second positioner issues NPUD (mode = TA)
//!				8. Check that another update request is not received
//!				9. Create and issue the simple pos update.
//!				10. Start the active scheduler for some time.
//!				11. Check the pos update is received by both positioners and equal to the sent one.
//! @SYMTestExpectedResults     single update request received with mode set to TA. Both NPUDs complete normally.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248,REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTA-TA-TA
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTA-TA-TA



//------------------------------- Device Caps TA || TB

RUN_UTILS CopyFile c:\testdata\configs\te_lbsagpspsy_devicecaps_exclusive.ini  c:\private\10285acb\lbs\locmods\agpsintegmodule.ini

START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-0-A
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-0-A
//! @SYMTestCaseDesc            Verify correct merging of requests (single autonomous request)
//! @SYMTestActions             1. Create gps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD.
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to autonomous.
//!				6. Create and issue the simple pos update.
//!				7. Start the active scheduler for some time.
//!				8. Check the pos update	is received and equal to the sent one.
//! @SYMTestExpectedResults     single update request received with mode set to autonomous. NPUD completes normally
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ 11252, REQ 11475, REQ 11480, REQ 11481, REQ 11649, REQ 11657
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBORTA-0-A
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-0-A


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-0-TB
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-0-TB
//! @SYMTestCaseDesc            Verify correct merging of requests (single TB)
//! @SYMTestActions             1. Create agps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TB).
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to TB.
//!				6. Create and issue the simple pos update.
//!				7. Start the active scheduler for some time.
//!				8. Check the pos update is received by the positioner and equal to the sent one.
//! @SYMTestExpectedResults     single update request received with mode set to TB. NPUD completes normally.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ 11252, REQ 11475, REQ 11480, REQ 11481
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBORTA-0-TB
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-0-TB


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-0-TA
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-0-TA
//! @SYMTestCaseDesc            Verify correct merging of requests (single TA request)
//! @SYMTestActions             1. Create gps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD.
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to TA.
//!				6. Create and issue the simple pos update.
//!				7. Start the active scheduler for some time.
//!				8. Check the pos update	is received and equal to the sent one.
//! @SYMTestExpectedResults     single update request received with mode set to TA. NPUD completes normally
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248,REQ 11252, REQ 11475, REQ 11480, REQ 11481
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBORTA-0-TA
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-0-TA


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-TB-A
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-TB-A
//! @SYMTestCaseDesc            Verify correct merging of requests (TB then autonomous)
//! @SYMTestActions             1. Create agps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TB).
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to TB.
//!				6. Create a second gps positioner 
//!				7. Second positioner issues NPUD (mode = Autononmous)
//!				8. Check that another update request is not received
//!				9. Create and issue the simple pos update.
//!				10. Start the active scheduler for some time.
//!				11. Check the pos update is received by both positioners and equal to the sent one.
//! @SYMTestExpectedResults     single update request received with mode set to TB. Both NPUDs complete normally
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248,REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481, REQ 11649, REQ 11651, REQ 11657
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBORTA-TB-A
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-TB-A


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-TB-TB
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-TB-TB
//! @SYMTestCaseDesc            Verify correct merging of requests (2 TB requests)
//! @SYMTestActions             1. Create gps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TB).
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to TB.
//!				6. Create a second gps positioner 
//!				7. Second positioner issues NPUD (mode = TB)
//!				8. Check that another update request is not received
//!				9. Create and issue the simple pos update.
//!				10. Start the active scheduler for some time.
//!				11. Check the pos update is received by both positioners and equal to the sent one.
//! @SYMTestExpectedResults     single update request received with mode set to TB. Both NPUDs complete normally.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBORTA-TB-TB
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-TB-TB


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-TB-TA
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-TB-TA
//! @SYMTestCaseDesc            Verify correct merging of requests (TB then TA)
//! @SYMTestActions             1. Create agps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TB).
//!				4. Check that default update request is received with newClient flag set to ETrue and mode set to TB.
//!				6. Create a second gps positioner 
//!				7. Second positioner issues NPUD (mode = TA)
//!				8. Check that the update request fails with KErrInUse
//!				9. Start the active scheduler for some time.
//!				10. Check that another update request is not received
//! @SYMTestExpectedResults     Single update requests received with mode TB, first NPUD completes normally second NPUD completes with KErrInUse
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBORTA-TB-TA
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-TB-TA


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-TA-A
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-TA-A
//! @SYMTestCaseDesc            Verify correct merging of requests (TA then autonomous)
//! @SYMTestActions             1. Create agps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TA).
//!				4. Check that default update request is received with newClient flag set to ETrue and mode set to TA.
//!				6. Create a second gps positioner 
//!				7. Second positioner issues NPUD (mode = autonomous)
//!				8. Check that the update request fails with KErrInUse
//!				9. Start the active scheduler for some time.
//!				10. Check that another update request is not received
//! @SYMTestExpectedResults     Single update requests received with mode TA, first NPUD completes normally second NPUD completes with KErrInUse
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481, REQ 11649, REQ 11651, REQ 11652, REQ 11657
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBORTA-TA-A
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-TA-A


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-TA-TB
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-TA-TB
//! @SYMTestCaseDesc            Verify correct merging of requests (TA then TB)
//! @SYMTestActions             1. Create agps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TA).
//!				4. Check that default update request is received with newClient flag set to ETrue and mode set to TA.
//!				6. Create a second gps positioner 
//!				7. Second positioner issues NPUD (mode = TB)
//!				8. Check that the update request fails with KErrInUse
//!				9. Start the active scheduler for some time.
//!				10. Check that another update request is not received
//! @SYMTestExpectedResults     Single update requests received with mode TA, first NPUD completes normally second NPUD completes with KErrInUse
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBORTA-TA-TB
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-TA-TB


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-TA-TA
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-TA-TA
//! @SYMTestCaseDesc            Verify correct merging of requests (2 TA requests)
//! @SYMTestActions             1. Create agps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TA).
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to TA.
//!				6. Create a second agps positioner 
//!				7. Second positioner issues NPUD (mode = TA)
//!				8. Check that another update request is not received
//!				9. Create and issue the simple pos update.
//!				10. Start the active scheduler for some time.
//!				11. Check the pos update is received by both positioners and equal to the sent one.
//! @SYMTestExpectedResults     single update request received with mode set to TA. Both NPUDs complete normally.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBORTA-TA-TA
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-TA-TA


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-A-A
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-A-A
//! @SYMTestCaseDesc            Verify correct merging of requests (2 autonomous requests)
//! @SYMTestActions             1. Create gps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = Autonomous).
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to autonomous.
//!				6. Create a second gps positioner 
//!				7. Second positioner issues NPUD (mode = autonomous)
//!				8. Check that another update request is not received
//!				9. Create and issue the simple pos update.
//!				10. Start the active scheduler for some time.
//!				11. Check the pos update is received by both positioners and equal to the sent one.
//! @SYMTestExpectedResults     single update request received with mode set to autonomous. Both NPUDs complete normally.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481, REQ 11649, REQ 11656, REQ 11657
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBORTA-A-A
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-A-A


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-A-TB
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-A-TB
//! @SYMTestCaseDesc            Verify correct merging of requests (autonomous then TB)
//! @SYMTestActions             1. Create gps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = Autonomous).
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to autonomous.
//!				6. Create a second gps positioner 
//!				7. Second positioner issues NPUD (mode = TB)
//!				8. Check that default update request is received with newClient flag set to ETrue and mode set to TB.
//!				9. Create and issue the simple pos update.
//!				10. Start the active scheduler for some time.
//!				11. Check the pos update is received by both positioners and equal to the sent one.
//! @SYMTestExpectedResults     2 update requests received with mode set to autonomous then TB. Both NPUDs complete normally
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481, REQ 11649, REQ 11651, REQ 11657
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBORTA-A-TB
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-A-TB


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-A-TA
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-A-TA
//! @SYMTestCaseDesc            Verify correct merging of requests (autonomous the TA)
//! @SYMTestActions             1. Create gps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = autonomous).
//!				4. Check that default update request is received with newClient flag set to ETrue and mode set to autonomous.
//!				6. Create a second, agps, positioner 
//!				7. Second positioner issues NPUD (mode = TA)
//!				8. Check that the update request fails with KErrInUse
//!				9. Start the active scheduler for some time.
//!				10. Check that another update request is not received
//! @SYMTestExpectedResults     Single update requests received with mode autonomous, first NPUD completes normally second NPUD completes with KErrInUse
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481, REQ 11649, REQ 11651, REQ 11652, REQ 11657
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBORTA-A-TA
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTAORTB-A-TA



//------------------------------- Device Caps TB && TA

RUN_UTILS CopyFile c:\testdata\configs\te_lbsagpspsy_devicecaps_simultaneous.ini  c:\private\10285acb\lbs\locmods\agpsintegmodule.ini

START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-0-A
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-0-A
//! @SYMTestCaseDesc            Verify correct merging of requests (single autonomous request)
//! @SYMTestActions             1. Create gps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD.
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to autonomous.
//!				6. Create and issue the simple pos update.
//!				7. Start the active scheduler for some time.
//!				8. Check the pos update	is received and equal to the sent one.
//! @SYMTestExpectedResults     single update request received with mode set to autonomous. NPUD completes normally
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ 11252, REQ 11475, REQ 11480, REQ 11481, REQ 11649, REQ 11657
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBANDTA-0-A
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-0-A


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-0-TB
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-0-TB
//! @SYMTestCaseDesc            Verify correct merging of requests (single TB)
//! @SYMTestActions             1. Create agps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TB).
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to TB.
//!				6. Create and issue the simple pos update.
//!				7. Start the active scheduler for some time.
//!				8. Check the pos update is received by the positioner and equal to the sent one.
//! @SYMTestExpectedResults     single update request received with mode set to TB. NPUD completes normally.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ 11252, REQ 11475, REQ 11480, REQ 11481
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBANDTA-0-TB
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-0-TB


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-0-TA
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-0-TA
//! @SYMTestCaseDesc            Verify correct merging of requests (single TA request)
//! @SYMTestActions             1. Create gps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD.
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to TA.
//!				6. Create and issue the simple pos update.
//!				7. Start the active scheduler for some time.
//!				8. Check the pos update	is received and equal to the sent one.
//! @SYMTestExpectedResults     single update request received with mode set to TA. NPUD completes normally
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ 11252, REQ 11475, REQ 11480, REQ 11481
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBANDTA-0-TA
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-0-TA


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-TB-A
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-TB-A
//! @SYMTestCaseDesc            Verify correct merging of requests (TB then autonomous)
//! @SYMTestActions             1. Create agps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TB).
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to TB.
//!				6. Create a second gps positioner 
//!				7. Second positioner issues NPUD (mode = Autononmous)
//!				8. Check that another update request is not received
//!				9. Create and issue the simple pos update.
//!				10. Start the active scheduler for some time.
//!				11. Check the pos update is received by both positioners and equal to the sent one.
//! @SYMTestExpectedResults     single update request received with mode set to TB. Both NPUDs complete normally
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481, REQ 11649, REQ 11651, REQ 11657
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBANDTA-TB-A
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-TB-A


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-TB-TB
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-TB-TB
//! @SYMTestCaseDesc            Verify correct merging of requests (2 TB requests)
//! @SYMTestActions             1. Create gps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TB).
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to TB.
//!				6. Create a second gps positioner 
//!				7. Second positioner issues NPUD (mode = TB)
//!				8. Check that another update request is not received
//!				9. Create and issue the simple pos update.
//!				10. Start the active scheduler for some time.
//!				11. Check the pos update is received by both positioners and equal to the sent one.
//! @SYMTestExpectedResults     single update request received with mode set to TB. Both NPUDs complete normally.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBANDTA-TB-TB
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-TB-TB


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-TB-TA
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-TB-TA
//! @SYMTestCaseDesc            Verify correct merging of requests (TB then TA)
//! @SYMTestActions             1. Create agps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TB).
//!				4. Check that default update request is received with newClient flag set to ETrue and mode set to TB.
//!				6. Create a second gps positioner 
//!				7. Second positioner issues NPUD (mode = TA)
//!				8. Check that the update request fails with KErrInUse
//!				9. Start the active scheduler for some time.
//!				10. Check that another update request is not received
//! @SYMTestExpectedResults     Single update requests received with mode TB, first NPUD completes normally second NPUD completes with KErrInUse
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBANDTA-TB-TA
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-TB-TA


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-TA-A
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-TA-A
//! @SYMTestCaseDesc            Verify correct merging of requests (TA then autonomous)
//! @SYMTestActions             1. Create agps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TA).
//!				4. Check that default update request is received with newClient flag set to ETrue and mode set to TA.
//!				6. Create a second gps positioner 
//!				7. Second positioner issues NPUD (mode = autonomous)
//!				8. Check that the update request fails with KErrInUse
//!				9. Start the active scheduler for some time.
//!				10. Check that another update request is not received
//! @SYMTestExpectedResults     Single update requests received with mode TA, first NPUD completes normally second NPUD completes with KErrInUse
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481, REQ 11649, REQ 11652, REQ 11657
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBANDTA-TA-A
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-TA-A


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-TA-TB
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-TA-TB
//! @SYMTestCaseDesc            Verify correct merging of requests (TA then TB)
//! @SYMTestActions             1. Create agps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TA).
//!				4. Check that default update request is received with newClient flag set to ETrue and mode set to TA.
//!				6. Create a second gps positioner 
//!				7. Second positioner issues NPUD (mode = TB)
//!				8. Check that the update request fails with KErrInUse
//!				9. Start the active scheduler for some time.
//!				10. Check that another update request is not received
//! @SYMTestExpectedResults     Single update requests received with mode TA, first NPUD completes normally second NPUD completes with KErrInUse
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBANDTA-TA-TB
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-TA-TB


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-TA-TA
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-TA-TA
//! @SYMTestCaseDesc            Verify correct merging of requests (2 TA requests)
//! @SYMTestActions             1. Create agps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = TA).
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to TA.
//!				6. Create a second agps positioner 
//!				7. Second positioner issues NPUD (mode = TA)
//!				8. Check that another update request is not received
//!				9. Create and issue the simple pos update.
//!				10. Start the active scheduler for some time.
//!				11. Check the pos update is received by both positioners and equal to the sent one.
//! @SYMTestExpectedResults     single update request received with mode set to TA. Both NPUDs complete normally.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBANDTA-TA-TA
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-TA-TA


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-A-A
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-A-A
//! @SYMTestCaseDesc            Verify correct merging of requests (2 autonomous requests)
//! @SYMTestActions             1. Create gps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = Autonomous).
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to autonomous.
//!				6. Create a second gps positioner 
//!				7. Second positioner issues NPUD (mode = autonomous)
//!				8. Check that another update request is not received
//!				9. Create and issue the simple pos update.
//!				10. Start the active scheduler for some time.
//!				11. Check the pos update is received by both positioners and equal to the sent one.
//! @SYMTestExpectedResults     single update request received with mode set to autonomous. Both NPUDs complete normally.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481, REQ 11649, REQ 11656, REQ 11657
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBANDTA-A-A
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-A-A


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-A-TB
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-A-TB
//! @SYMTestCaseDesc            Verify correct merging of requests (autonomous then TB)
//! @SYMTestActions             1. Create gps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = Autonomous).
//!				4. Start the active scheduler for some time.
//!				5. Check that default update request is received with newClient flag set to ETrue and mode set to autonomous.
//!				6. Create a second gps positioner 
//!				7. Second positioner issues NPUD (mode = TB)
//!				8. Check that default update request is received with newClient flag set to ETrue and mode set to TB.
//!				9. Create and issue the simple pos update.
//!				10. Start the active scheduler for some time.
//!				11. Check the pos update is received by both positioners and equal to the sent one.
//! @SYMTestExpectedResults     2 update requests received with mode set to autonomous then TB. Both NPUDs complete normally
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481, REQ 11649, REQ 11651, REQ 11657
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBANDTA-A-TB
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-A-TB


START_TESTCASE                	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-A-TA
//! @SYMTestCaseID              LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-A-TA
//! @SYMTestCaseDesc            Verify correct merging of requests (autonomous then TA)
//! @SYMTestActions             1. Create agps positioner and update request listener.
//!                             2. The update request listener starts listening. 
//!				3. The positioner issues NPUD (mode = autonomous).
//!				4. Check that default update request is received with newClient flag set to ETrue and mode set to autonomous.
//!				6. Create a second gps positioner 
//!				7. Second positioner issues NPUD (mode = TA)
//!				8. Check that the update request fails with KErrInUse
//!				9. Start the active scheduler for some time.
//!				10. Check that another update request is not received
//! @SYMTestExpectedResults     Single update requests received with mode autonomous, first NPUD completes normally second NPUD completes with KErrInUse
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMTestStatus              Released
//! @SYMPREQ                    PREQ 1662
//! @SYMREQ                     REQ 8827, REQ 8828, REQ 11248, REQ11250, REQ 11252, REQ 11475, REQ 11480, REQ 11481, REQ 11649, REQ 11652, REQ 11657
//! @SYMCreationDate            21/11/2008
//! @SYMAuthor                  LornaM
RUN_TEST_STEP 300 te_lbsagpspsysuite NotifyPositionUpdateMode c:\testdata\configs\te_lbsagpspsy.ini SectionMerge-CAPSTBANDTA-A-TA
END_TESTCASE                  	LBS-AgpsPsySuite-NPUDModeMerge-CapsTBANDTA-A-TA

RUN_UTILS DeleteFile c:\private\10285acb\lbs\lbsprofile.ini
RUN_UTILS DeleteFile c:\private\10285acb\lbs\locmods\agpsintegmodule.ini

PRINT COMPLETE ALL te_lbsagpspsysuite TESTS



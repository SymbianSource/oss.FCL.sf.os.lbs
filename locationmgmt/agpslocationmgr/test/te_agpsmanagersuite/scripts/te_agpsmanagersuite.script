//
// Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//
//! @File
//! @SYMTestSuiteName            te_agpsmanagersuite.script
//! @SYMScriptTestEnvironment TEF
PRINT Run te_agpsmanagersuite
LOAD_SUITE te_agpsmanagersuite



START_TESTCASE                LBS-AGPSManagerSuite-0001
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0001
//! @SYMTestCaseDesc            Valid Positioning Method from the LS in TerminalBased H/W.
//!                             This test ensures that, for Terminal Based capable hardware,
//!                             when the Location Server issues a Location Request with a valid
//!                             positioning method (Autonomous first, TB later), the GPS Module
//!                             receives a call to set new gps options with that positioning method.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP 10 te_agpsmanagersuite Te_AgpsManagerStep1
END_TESTCASE                  LBS-AGPSManagerSuite-0001



START_TESTCASE                LBS-AGPSManagerSuite-0002
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0002
//! @SYMTestCaseDesc            Valid Positioning Method from the LS in TerminalAssisted H/W.
//!                             This test ensures that, for Terminal Assisted only capable hardware,
//!                             when the Location Server issues a Location Request with a valid
//!                             positioning method (TA), the GPS Module receives a call to set
//!                             new gps options with that positioning method.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP 10 te_agpsmanagersuite Te_AgpsManagerStep2
END_TESTCASE                  LBS-AGPSManagerSuite-0002



START_TESTCASE                LBS-AGPSManagerSuite-0003
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0003
//! @SYMTestCaseDesc            Valid Positioning Method from the LS in TBorTA H/W.
//!                             This test ensures that, for hardware capable of mutually exclusive
//!                             Terminal Assisted or Terminal Based,
//!                             when the Location Server issues a Location Request with a valid
//!                             positioning method (Autonomous, TB or TA), the GPS Module
//!                             receives a call to set new gps options with that positioning method.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP 10 te_agpsmanagersuite Te_AgpsManagerStep3
END_TESTCASE                  LBS-AGPSManagerSuite-0003



START_TESTCASE                LBS-AGPSManagerSuite-0004
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0004
//! @SYMTestCaseDesc            Valid Positioning Method from the LS in TBandTA H/W.
//!                             This test ensures that, for hardware capable of simultaneous
//!                             Terminal Assisted and Terminal Based,
//!                             when the Location Server issues a Location Request with a valid
//!                             positioning method (Autonomous, TB or TA), the GPS Module
//!                             receives a call to set new gps options with that positioning method.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP 10 te_agpsmanagersuite Te_AgpsManagerStep4
END_TESTCASE                  LBS-AGPSManagerSuite-0004



START_TESTCASE                LBS-AGPSManagerSuite-0005
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0005
//! @SYMTestCaseDesc            Valid Positioning Method from the LS in Autonomous only H/W.
//!                             This test ensures that, for Autonomous capable hardware,
//!                             when the Location Server issues a Location Request with a valid
//!                             positioning method (Autonomous only), the GPS Module
//!                             receives a call to set new gps options with that positioning method.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP 10 te_agpsmanagersuite Te_AgpsManagerStep5
END_TESTCASE                  LBS-AGPSManagerSuite-0005



START_TESTCASE                LBS-AGPSManagerSuite-0006
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0006
//! @SYMTestCaseDesc            Valid Positioning Method from the NRH in TerminalBased H/W.
//!                             This test ensures that, for Terminal Based capable hardware,
//!                             when the NRH issues a Location Request with a valid
//!                             positioning method (Autonomous first, TB later), the GPS Module
//!                             receives a call to set new gps options with that positioning method.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP 10 te_agpsmanagersuite Te_AgpsManagerStep6
END_TESTCASE                  LBS-AGPSManagerSuite-0006



START_TESTCASE                LBS-AGPSManagerSuite-0007
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0007
//! @SYMTestCaseDesc            Valid Positioning Method from the NRH in TerminalAssisted H/W.
//!                             This test ensures that, for Terminal Assisted capable hardware,
//!                             when the NRH issues a Location Request with a valid
//!                             positioning method (TA), the GPS Module
//!                             receives a call to set new gps options with that positioning method.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP 10 te_agpsmanagersuite Te_AgpsManagerStep7
END_TESTCASE                  LBS-AGPSManagerSuite-0007



START_TESTCASE                LBS-AGPSManagerSuite-0008
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0008
//! @SYMTestCaseDesc            Valid Positioning Method from the NRH in TBorTA H/W.
//!                             This test ensures that, for hardware capable of mutually exclusive
//!                             Terminal Assisted or Terminal Based,
//!                             when the NRH issues a Location Request with a valid
//!                             positioning method (Autonomous, TB or TA), the GPS Module
//!                             receives a call to set new gps options with that positioning method.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP 10 te_agpsmanagersuite Te_AgpsManagerStep8
END_TESTCASE                  LBS-AGPSManagerSuite-0008



START_TESTCASE                LBS-AGPSManagerSuite-0009
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0009
//! @SYMTestCaseDesc            Valid Positioning Method from the NRH in TBandTA H/W.
//!                             This test ensures that, for hardware capable of simultaneous
//!                             Terminal Assisted or Terminal Based,
//!                             when the NRH issues a Location Request with a valid
//!                             positioning method (Autonomous, TB or TA), the GPS Module
//!                             receives a call to set new gps options with that positioning method.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP 10 te_agpsmanagersuite Te_AgpsManagerStep9
END_TESTCASE                  LBS-AGPSManagerSuite-0009



START_TESTCASE                LBS-AGPSManagerSuite-0010
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0010
//! @SYMTestCaseDesc            Valid Positioning Method from the NRH in Autonomous only H/W.
//!                             This test ensures that, for Terminal Based capable hardware,
//!                             when the NRH issues a Location Request with a valid
//!                             positioning method (Autonomous only), the GPS Module
//!                             receives a call to set new gps options with that positioning method.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP 10 te_agpsmanagersuite Te_AgpsManagerStep10
END_TESTCASE                  LBS-AGPSManagerSuite-0010



START_TESTCASE                LBS-AGPSManagerSuite-0011
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0011
//! @SYMTestCaseDesc            Valid Combinations of Positioning Methods in Location
//!                             Requests from LS and NRH in Autonomous only H/W.
//!                             This test ensures that, for hardware only capable of
//!                             autonomous positioning, when both the LS and NRH issue
//!                             a Location Request with a valid positioning method
//!                             (Autonomous only), the GPS Module receives a call
//!                             to set new gps options with that positioning method.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP 10 te_agpsmanagersuite Te_AgpsManagerStep11
END_TESTCASE                  LBS-AGPSManagerSuite-0011



START_TESTCASE                LBS-AGPSManagerSuite-0012
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0012
//! @SYMTestCaseDesc            Valid Combinations of Positioning Methods in Location
//!                             Requests from LS and NRH in Terminal Based only H/W.
//!                             This test ensures that, for hardware only capable of
//!                             Terminal Based positioning, when both the LS and NRH issue
//!                             a Location Request with a valid positioning method
//!                             (Autonomous or Terminal Based), the GPS Module receives a call
//!                             to set new gps options with that positioning method.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP 10 te_agpsmanagersuite Te_AgpsManagerStep12
END_TESTCASE                  LBS-AGPSManagerSuite-0012



START_TESTCASE                LBS-AGPSManagerSuite-0013
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0013
//! @SYMTestCaseDesc            Valid Combinations of Positioning Methods in Location
//!                             Requests from LS and NRH in Terminal Assisted only H/W.
//!                             This test ensures that, for hardware only capable of
//!                             Terminal Based positioning, when both the LS and NRH issue
//!                             a Location Request with a valid positioning method
//!                             (Autonomous or Terminal Based), the GPS Module receives a call
//!                             to set new gps options with that positioning method.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP 10 te_agpsmanagersuite Te_AgpsManagerStep13
END_TESTCASE                  LBS-AGPSManagerSuite-0013



START_TESTCASE                LBS-AGPSManagerSuite-0014
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0014
//! @SYMTestCaseDesc            Valid Combinations of Positioning Methods in Location
//!                             Requests from LS and NRH with TAorTb H/W.
//!                             This test ensures that, for hardware capable of mutually
//!                             exclusive Terminal Based or Terminal Assisted positioning,
//!                             when both the LS and NRH issue a Location Request with a
//!                             valid positioning method (Autonomous, Terminal Based or Terminal
//!                             Assisted), the GPS Module receives a call to set new gps
//!                             options with that positioning method.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP 10 te_agpsmanagersuite Te_AgpsManagerStep14
END_TESTCASE                  LBS-AGPSManagerSuite-0014



START_TESTCASE                LBS-AGPSManagerSuite-0015
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0015
//! @SYMTestCaseDesc            Valid Combinations of Positioning Methods in Location
//!                             Requests from LS and NRH with TAorTb H/W.
//!                             This test ensures that, for hardware capable of mutually
//!                             exclusive Terminal Based or Terminal Assisted positioning,
//!                             when both the LS and NRH issue a Location Request with a
//!                             valid positioning method (Autonomous, Terminal Based or Terminal
//!                             Assisted), the GPS Module receives a call to set new gps
//!                             options with that positioning method.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP 10 te_agpsmanagersuite Te_AgpsManagerStep15
END_TESTCASE                  LBS-AGPSManagerSuite-0015



START_TESTCASE                LBS-AGPSManagerSuite-0016
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0016
//! @SYMTestCaseDesc            Active LS Mode selection.
//!                             This test checks that when the Location Server issues
//!                             a Location Request with Autonomous Positioning method
//!                             after a Location Request with Terminal Assisted or Terminal Based
//!                             method, the GPS Module is not asked to switch to Autonomous.
//!                             (This test is based on the Decision Table for Active LS Mode in
//!                             LBS Architectural Description)
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP 10 te_agpsmanagersuite Te_AgpsManagerStep16
END_TESTCASE                  LBS-AGPSManagerSuite-0016



START_TESTCASE                LBS-AGPSManagerSuite-0017
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0017
//! @SYMTestCaseDesc            Active LS Mode change results in new self location request.
//!                             This test checks that a change in the active LS GPS Mode results
//!                             in a Self Location Request sent to the Network Gateway.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP 10 te_agpsmanagersuite Te_AgpsManagerStep17
END_TESTCASE                  LBS-AGPSManagerSuite-0017



START_TESTCASE                LBS-AGPSManagerSuite-0018
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0018
//! @SYMTestCaseDesc            LS cancel when NRH active.
//!                             This test checks that if the LS cancels its outstanding request
//!                             the mode of the GPS module is not changed by the Manager when
//!                             there is an outstanding Location Request from the NRH.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP 10 te_agpsmanagersuite Te_AgpsManagerStep18
END_TESTCASE                  LBS-AGPSManagerSuite-0018



START_TESTCASE                LBS-AGPSManagerSuite-0019
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0019
//! @SYMTestCaseDesc            Boundary value tests for positioning Method in Location Server requests.
//!                             The number of positioning methods requested by the LS cannot be zero (Manager panics).
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP !PanicCode=0 2 te_agpsmanagersuite Te_AgpsManagerStep19
END_TESTCASE                  LBS-AGPSManagerSuite-0019



START_TESTCASE                LBS-AGPSManagerSuite-0020
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0020
//! @SYMTestCaseDesc            Boundary value tests for positioning Method in Location Server requests.
//!                             The number of positioning methods requested by the LS cannot be two (Manager panics).
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP !PanicCode=0 2 te_agpsmanagersuite Te_AgpsManagerStep20
END_TESTCASE                  LBS-AGPSManagerSuite-0020



START_TESTCASE                LBS-AGPSManagerSuite-0021
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0021
//! @SYMTestCaseDesc            Boundary value tests for positioning Method in Location Server requests.
//!                             The number of positioning methods requested by the LS cannot be 9 (Manager panics).
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP !PanicCode=0 2 te_agpsmanagersuite Te_AgpsManagerStep21
END_TESTCASE                  LBS-AGPSManagerSuite-0021



START_TESTCASE                LBS-AGPSManagerSuite-0022
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0022
//! @SYMTestCaseDesc            Boundary value tests for positioning Method in Location Server requests.
//!                             The number of positioning methods requested by the LS cannot be 10 (Manager panics).
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP !PanicCode=0 2 te_agpsmanagersuite Te_AgpsManagerStep22
END_TESTCASE                  LBS-AGPSManagerSuite-0022



START_TESTCASE                LBS-AGPSManagerSuite-0023
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0023
//! @SYMTestCaseDesc            Boundary value tests for positioning Method in Location Server requests.
//!                             The number of positioning methods requested by the LS cannot be 11 (interface doesn't allow it).
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP 2 te_agpsmanagersuite Te_AgpsManagerStep23
END_TESTCASE                  LBS-AGPSManagerSuite-0023



START_TESTCASE                LBS-AGPSManagerSuite-0024
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0024
//! @SYMTestCaseDesc            Boundary value tests for positioning Method in Location Server requests.
//!                             LS request a positioning method out of the valid range.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP !PanicCode=0 2 te_agpsmanagersuite Te_AgpsManagerStep24
END_TESTCASE                  LBS-AGPSManagerSuite-0024



START_TESTCASE                LBS-AGPSManagerSuite-0025
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0025
//! @SYMTestCaseDesc            Invalid values of positioning method from the Location Server in Autonomous-only h/w.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP !PanicCode=0 2 te_agpsmanagersuite Te_AgpsManagerStep25
END_TESTCASE                  LBS-AGPSManagerSuite-0025



START_TESTCASE                LBS-AGPSManagerSuite-0026
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0026
//! @SYMTestCaseDesc            Invalid values of positioning method from the Location Server in TerminalBased-only h/w.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP !PanicCode=0 2 te_agpsmanagersuite Te_AgpsManagerStep26
END_TESTCASE                  LBS-AGPSManagerSuite-0026



START_TESTCASE                LBS-AGPSManagerSuite-0027
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0027
//! @SYMTestCaseDesc            Invalid values of positioning method from the Location Server in TerminalAssisted-only h/w.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP !PanicCode=0 2 te_agpsmanagersuite Te_AgpsManagerStep27
END_TESTCASE                  LBS-AGPSManagerSuite-0027



START_TESTCASE                LBS-AGPSManagerSuite-0028
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0028
//! @SYMTestCaseDesc            Invalid values of positioning method from the NRH in h/w capable Autonomous time.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP !PanicCode=0 2 te_agpsmanagersuite Te_AgpsManagerStep28
END_TESTCASE                  LBS-AGPSManagerSuite-0028



START_TESTCASE                LBS-AGPSManagerSuite-0029
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0029
//! @SYMTestCaseDesc            Invalid values of positioning method from the NRH in TerminalBased-only h/w.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP !PanicCode=0 2 te_agpsmanagersuite Te_AgpsManagerStep29
END_TESTCASE                  LBS-AGPSManagerSuite-0029



START_TESTCASE                LBS-AGPSManagerSuite-0030
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0030
//! @SYMTestCaseDesc            Invalid values of positioning method from the NRH in TerminalAssisted-only h/w.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP !PanicCode=0 2 te_agpsmanagersuite Te_AgpsManagerStep30
END_TESTCASE                  LBS-AGPSManagerSuite-0030



START_TESTCASE                LBS-AGPSManagerSuite-0031
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0031
//! @SYMTestCaseDesc            Invalid values of positioning method from the NRH in h/w capable of TerminalBased or TerminalAssisted mode only.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            25/11/2008
//! @SYMAuthor                  juanmr
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP !PanicCode=0 2 te_agpsmanagersuite Te_AgpsManagerStep31
END_TESTCASE                  LBS-AGPSManagerSuite-0031

START_TESTCASE                LBS-AGPSManagerSuite-0032
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0032
//! @SYMTestCaseDesc            Valid Positioning Method from the NRH in TerminalBased H/W, followed by a LS request.
//!                             The LS request TT is in the future when the RequestAssistanceData is called by the GPS module.
//!                             We check that the assistance data is requested and no self-locate session is started with the NG.
//!                             Then the location update satisfies the NRH request. The location request is reissued to the GPS module
//!                             and when the RequestAssistanceData is called by the GPS module, self-location session must be started.
//!				Then the location update is generated and the self-location request finishes normally.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            16/03/2009
//! @SYMAuthor                  nikolayb
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP 30 te_agpsmanagersuite Te_AgpsManagerStep32
END_TESTCASE                  LBS-AGPSManagerSuite-0032

START_TESTCASE                LBS-AGPSManagerSuite-0033
//! @SYMTestCaseID              LBS-AGPSManagerSuite-0033
//! @SYMTestCaseDesc            Valid Positioning Method from the NRH in TerminalBased H/W, followed by a LS request.
//!                             The LS request TT is in the future when the RequestAssistanceData is called by the GPS module.
//!                             We check that the assistance data is requested and no self-locate session is started with the NG.
//!                             Then the LS TT comes. The location request is reissued to the GPS module
//!                             and when the RequestAssistanceData is called by the GPS module, self-location session must be started.
//!				Then the location update is generated and the self-location request finishes normally.
//! @SYMTestPriority            High
//! @SYMTestType                UT
//! @SYMCreationDate            17/03/2009
//! @SYMAuthor                  nikolayb
//! @SYMTestStatus              2. Functional
RUN_TEST_STEP 30 te_agpsmanagersuite Te_AgpsManagerStep33
END_TESTCASE                  LBS-AGPSManagerSuite-0033


PRINT te_agpsmanagersuite done


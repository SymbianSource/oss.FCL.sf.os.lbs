EXPORTS
	??1CLbsLocationInfoConverter@@UAE@XZ @ 1 NONAME ; CLbsLocationInfoConverter::~CLbsLocationInfoConverter(void)
	??1CLbsLocationResolver@@UAE@XZ @ 2 NONAME ; CLbsLocationResolver::~CLbsLocationResolver(void)
	?CancelConvertLocationInfo@CLbsLocationInfoConverter@@QAEXXZ @ 3 NONAME ; void CLbsLocationInfoConverter::CancelConvertLocationInfo(void)
	?CancelResolveLocation@CLbsLocationResolver@@QAEXXZ @ 4 NONAME ; void CLbsLocationResolver::CancelResolveLocation(void)
	?ConvertLocationInfoL@CLbsLocationInfoConverter@@QAEXAAV?$RPointerArray@VCLbsLocationInfoBase@@@@KK@Z @ 5 NONAME ; void CLbsLocationInfoConverter::ConvertLocationInfoL(class RPointerArray<class CLbsLocationInfoBase> &, unsigned long, unsigned long)
	?ConvertLocationInfoL@CLbsLocationInfoConverter@@QAEXAAVCLbsLocationInfoBase@@KK@Z @ 6 NONAME ; void CLbsLocationInfoConverter::ConvertLocationInfoL(class CLbsLocationInfoBase &, unsigned long, unsigned long)
	?NewL@CLbsLocationInfoConverter@@SAPAV1@AAVMLbsLocationInfoConverterObserver@@@Z @ 7 NONAME ; class CLbsLocationInfoConverter * CLbsLocationInfoConverter::NewL(class MLbsLocationInfoConverterObserver &)
	?NewL@CLbsLocationInfoConverter@@SAPAV1@AAVMLbsLocationInfoConverterObserver@@VTUid@@@Z @ 8 NONAME ; class CLbsLocationInfoConverter * CLbsLocationInfoConverter::NewL(class MLbsLocationInfoConverterObserver &, class TUid)
	?NewL@CLbsLocationResolver@@SAPAV1@AAVMLbsLocationResolverObserver@@@Z @ 9 NONAME ; class CLbsLocationResolver * CLbsLocationResolver::NewL(class MLbsLocationResolverObserver &)
	?NewL@CLbsLocationResolver@@SAPAV1@AAVMLbsLocationResolverObserver@@VTUid@@@Z @ 10 NONAME ; class CLbsLocationResolver * CLbsLocationResolver::NewL(class MLbsLocationResolverObserver &, class TUid)
	?ResolveLocationL@CLbsLocationResolver@@QAEXABVCLbsLocationInfo@@@Z @ 11 NONAME ; void CLbsLocationResolver::ResolveLocationL(class CLbsLocationInfo const &)
	?Version@MLbsLocationInfoConverterObserver@@UBE?AVTVersion@@XZ @ 12 NONAME ; class TVersion MLbsLocationInfoConverterObserver::Version(void) const
	?Version@MLbsLocationResolverObserver@@UBE?AVTVersion@@XZ @ 13 NONAME ; class TVersion MLbsLocationResolverObserver::Version(void) const

